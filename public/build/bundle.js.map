{"version":3,"sources":["webpack:///public/build/bundle.js","webpack:///webpack/bootstrap d34d89c3657a9efef8fd","webpack:///./public/app/js/main.js","webpack:///./public/app/js/modules/core.js","webpack:///./public/app/js/modules/ajax.js","webpack:///./public/app/js/modules/transport.js","webpack:///./public/app/js/modules/content.js","webpack:///./public/app/js/modules/appender.js","webpack:///./public/app/js/modules/parser.js","webpack:///./public/app/js/modules/comments.js","webpack:///./public/app/js/modules/alerts.js","webpack:///./public/app/js/modules/autoresizeTextarea.js","webpack:///./public/app/js/modules/profileSettings.js","webpack:///./public/app/js/modules/sharer.js"],"names":["codex","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","nodes","content","init","customCheckboxes","approvalButtons","autoresizeTextarea","window","codexSpecial","blockId","core","log","docReady","f","test","document","readyState","setTimeout","ajax","transport","appender","parser","comments","alerts","profileSettings","sharer","str","prefix","type","arg","staticLength","length","substr","console","e","getOffset","elem","docElem","win","rect","doc","getClientRects","getBoundingClientRect","width","height","ownerDocument","documentElement","top","pageYOffset","clientTop","left","pageXOffset","clientLeft","isElementOnScreen","el","elPositon","screenBottom","scrollY","innerHeight","css","getComputedStyle","insertAfter","target","element","parentNode","insertBefore","nextSibling","replace","nodeToReplace","replaceWith","replaceChild","random","min","max","Math","floor","delegateEvent","targetSelector","eventName","callback","addEventListener","event","matched","matches","parentElement","nodeTypes","TAG","TEXT","COMMENT","DOCUMENT_FRAGMENT","keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","LEFT","UP","DOWN","RIGHT","DELETE","META","isDomNode","nodeType","this","parseHTML","inputString","contentHolder","childs","parsedNodes","createElement","innerHTML","trim","childNodes","node","i","textContent","push","isEmpty","obj","Object","isVisible","offsetParent","setCookie","name","value","expires","path","domain","toGMTString","cookie","getCookie","dc","begin","indexOf","end","unescape","substring","isFormData","object","append","data","url","XMLHTTP","XMLHttpRequest","ActiveXObject","successFunction","async","success","withCredentials","beforeSend","open","setRequestHeader","onreadystatechange","status","responseText","send","transportURL","input","keydownFinishedTimeout","files","prepare","fileSelected","clearInput","selectFile","click","formData","FormData","responseForPageForm","beforeSendPageForm","response","JSON","parse","title","storeFile","show","message","file","appendFileRow","attachesZone","getElementById","row","filename","deleteButton","classList","add","setAttribute","dataset","readyForDelete","remove","appendChild","storeFileName","clearTimeout","submitAtlasForm","atlasForm","forms","atlas","attachesInput","stringify","JSONinput","editor","saver","saveBlocks","blocksCount","state","jsonOutput","submit","openEditorFullscrean","openEditorFlagInput","toggleMobileMenu","menu","openedClass","toggle","stopPropagation","stopImmediatePropagation","preventDefault","CHECKED_CLASS","checkboxes","getElementsByClassName","clicked","checkbox","querySelector","isChecked","contains","removeAttribute","CLICKED_CLASS","buttons","button","isClicked","page","settings","blockForItems","loadMoreButton","buttonText","buttonId","targetBlockId","currentPage","autoLoading","isAllowed","load","requestUrl","parseInt","pages","canLoad","next_page","disable","showException","style","display","isLaunched","scrollEvent","removeEventListener","scrollReachedEnd","body","clientHeight","_this","inputPasteCallback","sendRequest","sourceLink","article","commentsList","listId","anchor","highligthAnchor","reply","replyButton","CSS_","replyOpened","replyParams","parentId","rootId","action","form","createForm","getFormTextarea","focus","params","textarea","createTextarea","createButton","replyForm","replyTextarea","placeholder","keydownSubmitHandler","blurTextareaHandler","addListener","replySubmitButton","submitClicked_","send_","getElementsByTagName","commentId","removeForm","ctrlPressed","ctrlKey","metaKey","enterPressed","keyCode","submitBtn","actionURL","csrf","comment","emptyCommentsBlock","scrollTo","scrollHeight","highligthComment","error","highlighted","numbers","match","location","hash","prepare_","wrapper_","wrapper","notify","exception","textareas","textareaChanged","checkScrollHeight","bindEvents","repeatConfirmEmailBtn","sendEmeailConfirmation","shareButtons","querySelectorAll","shareVk","link","desc","img","popup","shareFacebook","FB_APP_ID","href","shareTwitter","shareTelegram","socialType","yaCounter32652805","reachGoal","shareType","shareData"],"mappings":"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","file":"./public/build/bundle.js","sourcesContent":["var codex =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t* Require CSS build\n\t*/\n\t__webpack_require__(1);\n\t\n\t/**\n\t* Codex client\n\t* @author Savchenko Peter <specc.dev@gmail.com>\n\t*/\n\tcodex = (function (codex) {\n\t\n\t    'use strict';\n\t\n\t    /**\n\t    * Static nodes cache\n\t    */\n\t    codex.nodes = {\n\t        content : null\n\t    };\n\t\n\t    codex.init = function () {\n\t\n\t        /**\n\t        * Stylize custom checkboxes\n\t        */\n\t        codex.content.customCheckboxes.init();\n\t\n\t        /**\n\t        * Init approval buttons\n\t        */\n\t        codex.content.approvalButtons.init();\n\t\n\t        codex.autoresizeTextarea.init();\n\t\n\t        /**\n\t        * Init CodeX Special module for contrast version\n\t        * @see https://github.com/codex-team/codex.special\n\t        */\n\t        window.codexSpecial.init({\n\t            blockId : 'js-contrast-version-holder',\n\t        });\n\t\n\t        codex.core.log('Initialized', 'App init', 'info');\n\t\n\t    };\n\t\n\t    return codex;\n\t\n\t})({});\n\t\n\t/**\n\t* Document ready handler\n\t*/\n\tcodex.docReady = function (f) {\n\t\n\t    /in/.test(document.readyState) ? window.setTimeout(codex.docReady, 9, f) : f();\n\t\n\t};\n\t\n\t\n\t/**\n\t* Load modules\n\t*/\n\tcodex.core               = __webpack_require__(3);\n\tcodex.ajax               = __webpack_require__(4);\n\tcodex.transport          = __webpack_require__(5);\n\tcodex.content            = __webpack_require__(6);\n\tcodex.appender           = __webpack_require__(7);\n\tcodex.parser             = __webpack_require__(8);\n\tcodex.comments           = __webpack_require__(9);\n\tcodex.alerts             = __webpack_require__(10);\n\tcodex.autoresizeTextarea = __webpack_require__(12);\n\tcodex.profileSettings    = __webpack_require__(13);\n\tcodex.sharer             = __webpack_require__(14);\n\t\n\tmodule.exports = codex;\n\t\n\tcodex.docReady(function () {\n\t\n\t    codex.init();\n\t\n\t});\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Significant core methods\n\t*/\n\t\n\tmodule.exports = {\n\t\n\t    /** Logging method */\n\t    log : function (str, prefix, type, arg) {\n\t\n\t        var staticLength = 32;\n\t\n\t        if (prefix) {\n\t\n\t            prefix = prefix.length < staticLength ? prefix : prefix.substr( 0, staticLength - 2 );\n\t\n\t            while (prefix.length < staticLength - 1) {\n\t\n\t                prefix += ' ';\n\t\n\t            }\n\t\n\t            prefix += ':';\n\t            str = prefix + str;\n\t\n\t        }\n\t\n\t        type = type || 'log';\n\t\n\t        try {\n\t\n\t            if ('console' in window && window.console[ type ]) {\n\t\n\t                if (arg) console[type](str, arg);\n\t                else console[type](str);\n\t\n\t            }\n\t\n\t        } catch(e) {}\n\t\n\t    },\n\t\n\t    /**\n\t    * @return {object} dom element real offset\n\t    */\n\t    getOffset : function (elem) {\n\t\n\t        var docElem, win, rect, doc;\n\t\n\t        if (!elem) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        /**\n\t        * Support: IE <=11 only\n\t        * Running getBoundingClientRect on a\n\t        * disconnected node in IE throws an error\n\t        */\n\t        if (!elem.getClientRects().length) {\n\t\n\t            return {\n\t                top: 0,\n\t                left: 0\n\t            };\n\t\n\t        }\n\t\n\t        rect = elem.getBoundingClientRect();\n\t\n\t        /** Make sure element is not hidden (display: none) */\n\t        if (rect.width || rect.height) {\n\t\n\t            doc = elem.ownerDocument;\n\t            win = window;\n\t            docElem = doc.documentElement;\n\t\n\t            return {\n\t                top: rect.top + win.pageYOffset - docElem.clientTop,\n\t                left: rect.left + win.pageXOffset - docElem.clientLeft\n\t            };\n\t\n\t        }\n\t\n\t        /** Return zeros for disconnected and hidden elements (gh-2310) */\n\t        return rect;\n\t\n\t    },\n\t\n\t    /**\n\t    * Checks if element visible on screen at the moment\n\t    * @param {Element} - HTML NodeElement\n\t    */\n\t    isElementOnScreen : function (el) {\n\t\n\t        var elPositon    = codex.core.getOffset(el).top,\n\t            screenBottom = window.scrollY + window.innerHeight;\n\t\n\t        return screenBottom > elPositon;\n\t\n\t    },\n\t\n\t    /**\n\t    * Returns computed css styles for element\n\t    * @param {Element} el\n\t    */\n\t    css : function (el) {\n\t\n\t        return window.getComputedStyle(el);\n\t\n\t    },\n\t\n\t    /**\n\t    * Helper for inserting one element after another\n\t    */\n\t    insertAfter : function (target, element) {\n\t\n\t        target.parentNode.insertBefore(element, target.nextSibling);\n\t\n\t    },\n\t\n\t    /**\n\t    * Replaces node with\n\t    * @param {Element} nodeToReplace\n\t    * @param {Element} replaceWith\n\t    */\n\t    replace : function (nodeToReplace, replaceWith) {\n\t\n\t        return nodeToReplace.parentNode.replaceChild(replaceWith, nodeToReplace);\n\t\n\t    },\n\t\n\t    /**\n\t    * Helper for insert one element before another\n\t    */\n\t    insertBefore : function (target, element) {\n\t\n\t        target.parentNode.insertBefore(element, target);\n\t\n\t    },\n\t\n\t    /**\n\t    * Returns random {int} between numbers\n\t    */\n\t    random : function (min, max) {\n\t\n\t        return Math.floor(Math.random() * (max - min + 1)) + min;\n\t\n\t    },\n\t\n\t    /**\n\t    * Attach event to Element in parent\n\t    * @param {Element} parentNode    - Element that holds event\n\t    * @param {string} targetSelector - selector to filter target\n\t    * @param {string} eventName      - name of event\n\t    * @param {function} callback     - callback function\n\t    */\n\t    delegateEvent : function (parentNode, targetSelector, eventName, callback) {\n\t\n\t        parentNode.addEventListener(eventName, function (event) {\n\t\n\t            var el = event.target, matched;\n\t\n\t            while (el && !matched) {\n\t\n\t                matched = el.matches(targetSelector);\n\t\n\t                if (!matched) el = el.parentElement;\n\t\n\t            }\n\t\n\t            if (matched) {\n\t\n\t                callback.call(event.target, event, el);\n\t\n\t            }\n\t\n\t        }, true);\n\t\n\t    },\n\t\n\t\n\t    /**\n\t    * Readable DOM-node types map\n\t    */\n\t    nodeTypes : {\n\t        TAG     : 1,\n\t        TEXT    : 3,\n\t        COMMENT : 8,\n\t        DOCUMENT_FRAGMENT : 11\n\t    },\n\t\n\t    /**\n\t    * Readable keys map\n\t    */\n\t    keys : { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 },\n\t\n\t    /**\n\t    * @protected\n\t    * Check object for DOM node\n\t    */\n\t    isDomNode : function (el) {\n\t\n\t        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n\t\n\t    },\n\t\n\t    /**\n\t    * Parses string to nodeList\n\t    * Removes empty text nodes\n\t    * @param {string} inputString\n\t    * @return {array} of nodes\n\t    *\n\t    * Does not supports <tr> and <td> on firts level of inputString\n\t    */\n\t\n\t    parseHTML : function (inputString) {\n\t\n\t        // var templatesSupported = spark.supports.templates();\n\t\n\t        var contentHolder,\n\t            childs,\n\t            parsedNodes = [];\n\t\n\t        // if ( false &&   templatesSupported ) {\n\t\n\t        //     contentHolder = document.createElement('template');\n\t        //     contentHolder.innerHTML = inputString.trim();\n\t\n\t        //     console.log(\"contentHolder: %o\", contentHolder);\n\t\n\t        //     childs = contentHolder.content.cloneNode(true).childNodes;\n\t\n\t        // } else {\n\t\n\t        contentHolder = document.createElement('div');\n\t        contentHolder.innerHTML = inputString.trim();\n\t\n\t        childs = contentHolder.childNodes;\n\t\n\t        // }\n\t\n\t\n\t        /**\n\t        * Iterate childNodes and remove empty Text Nodes on first-level\n\t        */\n\t        for (var i = 0, node; !!(node = childs[i]); i++) {\n\t\n\t            if (node.nodeType == codex.core.nodeTypes.TEXT && !node.textContent.trim()) {\n\t\n\t                continue;\n\t\n\t            }\n\t\n\t            parsedNodes.push(node);\n\t\n\t        }\n\t\n\t        return parsedNodes;\n\t\n\t    },\n\t\n\t    /**\n\t    * Checks passed object for emptiness\n\t    * @require ES5 - Object.keys\n\t    * @param {object}\n\t    */\n\t    isEmpty : function (obj) {\n\t\n\t        return Object.keys(obj).length === 0;\n\t\n\t    },\n\t\n\t    /**\n\t    * Check for Element visibility\n\t    * @param {Element} el\n\t    */\n\t    isVisible : function (el) {\n\t\n\t        return el.offsetParent !== null;\n\t\n\t    },\n\t\n\t    setCookie : function (name, value, expires, path, domain) {\n\t\n\t        var str = name + '=' + value;\n\t\n\t        if (expires) str += '; expires=' + expires.toGMTString();\n\t        if (path)    str += '; path=' + path;\n\t        if (domain)  str += '; domain=' + domain;\n\t\n\t        document.cookie = str;\n\t\n\t    },\n\t\n\t    getCookie : function (name) {\n\t\n\t        var dc = document.cookie;\n\t\n\t        var prefix = name + '=',\n\t            begin = dc.indexOf('; ' + prefix);\n\t\n\t        if (begin == -1) {\n\t\n\t            begin = dc.indexOf(prefix);\n\t            if (begin !== 0) return null;\n\t\n\t        } else\n\t            begin += 2;\n\t\n\t        var end = document.cookie.indexOf(';', begin);\n\t\n\t        if (end == -1) end = dc.length;\n\t\n\t        return unescape(dc.substring(begin + prefix.length, end));\n\t\n\t    },\n\t\n\t};\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t* AJAX module\n\t*/\n\tvar ajax = (function () {\n\t\n\t    /**\n\t    * @usage codex.ajax.call();\n\t    */\n\t    var call = function (data) {\n\t\n\t        if (!data || !data.url) return;\n\t\n\t        var XMLHTTP          = window.XMLHttpRequest ? new window.XMLHttpRequest() : new window.ActiveXObject('Microsoft.XMLHTTP'),\n\t            successFunction  = function () {};\n\t\n\t        data.async           = true;\n\t        data.type            = data.type || 'GET';\n\t        data.data            = data.data || '';\n\t        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n\t        successFunction      = data.success || successFunction;\n\t\n\t        if (data.type == 'GET' && data.data) {\n\t\n\t            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\t\n\t        }\n\t\n\t        if (data.withCredentials) {\n\t\n\t            XMLHTTP.withCredentials = true;\n\t\n\t        }\n\t\n\t        if (data.beforeSend && typeof data.beforeSend == 'function') {\n\t\n\t            data.beforeSend.call();\n\t\n\t        }\n\t\n\t        XMLHTTP.open(data.type, data.url, data.async);\n\t\n\t        /**\n\t        * If we send FormData, we need no content-type header\n\t        */\n\t        if (!isFormData(data.data)) {\n\t\n\t            XMLHTTP.setRequestHeader('Content-type', data['content-type']);\n\t\n\t        }\n\t\n\t        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\t        XMLHTTP.onreadystatechange = function () {\n\t\n\t            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n\t\n\t                successFunction(XMLHTTP.responseText);\n\t\n\t            }\n\t\n\t        };\n\t\n\t        XMLHTTP.send(data.data);\n\t\n\t    };\n\t\n\t    /**\n\t     * Function for checking is it FormData object to send.\n\t     * @param {Object} object to check\n\t     * @return boolean\n\t     */\n\t    function isFormData(object) {\n\t\n\t        return typeof object.append === 'function';\n\t\n\t    };\n\t\n\t    return {\n\t\n\t        call : call\n\t\n\t    };\n\t\n\t}());\n\t\n\tmodule.exports = ajax;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t* File transport module\n\t*/\n\t\n\tvar transport = {\n\t\n\t    transportURL : '/file/transport',\n\t\n\t    /**\n\t    * Field for file\n\t    */\n\t    input : null,\n\t\n\t    /**\n\t    * Current transport type\n\t    */\n\t    type : null,\n\t\n\t    /**\n\t    * @uses for store inputed filename to this.files\n\t    */\n\t    keydownFinishedTimeout : null,\n\t\n\t    /**\n\t    * Current attaches will be stored in this object\n\t    * @see this.storeFile\n\t    */\n\t    files : {},\n\t\n\t    /**\n\t    * Create element and add listener\n\t    */\n\t    prepare : function () {\n\t\n\t        var input = document.createElement('INPUT');\n\t\n\t        input.type = 'file';\n\t        input.addEventListener('change', this.fileSelected);\n\t\n\t        this.input = input;\n\t\n\t    },\n\t\n\t    /**\n\t    * Clear input and type. Ready for getting new file\n\t    */\n\t    clearInput : function () {\n\t\n\t        /** Remove old input */\n\t        this.input = null;\n\t\n\t        this.type = null;\n\t\n\t    },\n\t\n\t    /**\n\t    * Choose-file button click handler\n\t    */\n\t    selectFile : function (event, type) {\n\t\n\t        this.prepare();\n\t\n\t        this.type = type;\n\t\n\t        this.input.click();\n\t\n\t    },\n\t\n\t    /**\n\t    * Send file to server when select\n\t    */\n\t    fileSelected : function () {\n\t\n\t        var type        = transport.type,\n\t            input       = this,\n\t            files       = input.files,\n\t            formData    = new FormData();\n\t\n\t        formData.append('type', type);\n\t\n\t        formData.append('files', files[0], files[0].name);\n\t\n\t        codex.ajax.call({\n\t            type : 'POST',\n\t            url : transport.transportURL,\n\t            data : formData,\n\t            success : transport.responseForPageForm,\n\t            beforeSend : transport.beforeSendPageForm,\n\t        });\n\t\n\t        transport.clearInput();\n\t\n\t    },\n\t\n\t    beforeSendPageForm : function () {\n\t\n\t        // add loader\n\t\n\t    },\n\t\n\t    /**\n\t    * Save file info into page form or show exception\n\t    */\n\t    responseForPageForm : function (response) {\n\t\n\t        // stop loader\n\t\n\t        response = JSON.parse(response);\n\t\n\t        if (response.success && response.title) {\n\t\n\t            transport.storeFile(response);\n\t\n\t        } else {\n\t\n\t            codex.alerts.show(response.message);\n\t\n\t        }\n\t\n\t    },\n\t\n\t    /**\n\t    * Store file in memory\n\t    * Attaches list will be sent form submitting\n\t    */\n\t    storeFile : function (file) {\n\t\n\t        if (!file || !file.id) return;\n\t\n\t        this.files[file.id] = {\n\t            'title' : file.title,\n\t            'id'    : file.id\n\t        };\n\t\n\t        this.appendFileRow(file);\n\t\n\t    },\n\t\n\t    /**\n\t    * Appends saved file to form\n\t    * Allow edit name by contenteditable element\n\t    */\n\t    appendFileRow : function (file) {\n\t\n\t        var attachesZone = document.getElementById('formAttaches'),\n\t            row          = document.createElement('div'),\n\t            filename     = document.createElement('span'),\n\t            deleteButton = document.createElement('span');\n\t\n\t        row.classList.add('item');\n\t\n\t        switch (file.type) {\n\t            case '1': filename.classList.add('item_file'); break;\n\t            case '2': filename.classList.add('item_image'); break;\n\t            default: break;\n\t        }\n\t\n\t        filename.textContent = file.title;\n\t        filename.setAttribute('contentEditable', true);\n\t\n\t        deleteButton.classList.add('fl_r', 'button-delete', 'icon-trash');\n\t        deleteButton.addEventListener('click', function () {\n\t\n\t            if (this.parentNode.dataset.readyForDelete) {\n\t\n\t                delete codex.transport.files[file.id];\n\t                this.parentNode.remove();\n\t\n\t            }\n\t\n\t            this.parentNode.dataset.readyForDelete = true;\n\t            this.classList.add('button-delete__ready-to-delete');\n\t            this.innerHTML = 'Удалить документ';\n\t\n\t        }, false);\n\t\n\t        row.appendChild(filename);\n\t        row.appendChild(deleteButton);\n\t\n\t        attachesZone.appendChild(row);\n\t\n\t        /** Save ID to determine which filename edited */\n\t        row.dataset.id = file.id;\n\t        row.addEventListener('input', this.storeFileName, false);\n\t\n\t    },\n\t\n\t    /**\n\t    * Saves filename from input to this.files object\n\t    */\n\t    storeFileName : function () {\n\t\n\t        /**\n\t        * Clear previous keydown-timeout\n\t        */\n\t        if (codex.transport.keydownFinishedTimeout) {\n\t\n\t            window.clearTimeout(codex.transport.keydownFinishedTimeout);\n\t\n\t        }\n\t\n\t        var input = this;\n\t\n\t        /**\n\t        * Start waiting to input finished, then save value to this.files\n\t        */\n\t        codex.transport.keydownFinishedTimeout = window.setTimeout(function () {\n\t\n\t            var id    = input.dataset.id,\n\t                title = input.textContent.trim();\n\t\n\t            if (title) {\n\t\n\t                codex.transport.files[id].title = title;\n\t\n\t            }\n\t\n\t        }, 200);\n\t\n\t\n\t    },\n\t\n\t    /**\n\t    * Prepares and submit form\n\t    * Send attaches by json-encoded stirng with hidden input\n\t    */\n\t    submitAtlasForm : function () {\n\t\n\t        var atlasForm = document.forms.atlas;\n\t\n\t        if (!atlasForm) return;\n\t\n\t\n\t\n\t        var attachesInput = document.createElement('input');\n\t\n\t        attachesInput.type = 'hidden';\n\t        attachesInput.name = 'attaches';\n\t        attachesInput.value = JSON.stringify(this.files);\n\t\n\t        atlasForm.appendChild(attachesInput);\n\t\n\t        /** CodeX.Editor */\n\t        var JSONinput = document.getElementById('json_result');\n\t\n\t        /**\n\t         * Save blocks\n\t         */\n\t        codex.editor.saver.saveBlocks();\n\t\n\t        window.setTimeout(function () {\n\t\n\t            var blocksCount = codex.editor.state.jsonOutput.length;\n\t\n\t            if (!blocksCount) {\n\t\n\t                JSONinput.innerHTML = '';\n\t\n\t            } else {\n\t\n\t                JSONinput.innerHTML = JSON.stringify({ data: codex.editor.state.jsonOutput} );\n\t\n\t            }\n\t\n\t            /**\n\t             * Send form\n\t             */\n\t            atlasForm.submit();\n\t\n\t        }, 100);\n\t\n\t    },\n\t\n\t    /**\n\t    * Submits editor form for opening in full-screan page without saving\n\t    */\n\t    openEditorFullscrean : function () {\n\t\n\t        var atlasForm = document.forms.atlas,\n\t            openEditorFlagInput = document.createElement('input');\n\t\n\t        openEditorFlagInput.type = 'hidden';\n\t        openEditorFlagInput.name = 'openFullScreen';\n\t        openEditorFlagInput.value = 1;\n\t\n\t        atlasForm.append(openEditorFlagInput);\n\t\n\t        this.submitAtlasForm();\n\t\n\t    }\n\t\n\t};\n\t\n\tmodule.exports = transport;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Operations with pages\n\t*/\n\tmodule.exports = (function () {\n\t\n\t    /**\n\t    * Toggles mobile menu\n\t    * Handles clicks on the hamburger icon in header\n\t    */\n\t    var toggleMobileMenu = function ( event ) {\n\t\n\t        var menu = document.getElementById('js-mobile-menu-holder'),\n\t            openedClass = 'mobile-menu-holder--opened';\n\t\n\t        menu.classList.toggle(openedClass);\n\t\n\t        event.stopPropagation();\n\t        event.stopImmediatePropagation();\n\t        event.preventDefault();\n\t\n\t    };\n\t\n\t    /**\n\t    * Module uses for toggle custom checkboxes\n\t    * that has 'js-custom-checkbox' class and input[type=\"checkbox\"] included\n\t    * Example:\n\t    * <span class=\"js-custom-checkbox\">\n\t    *    <input type=\"checkbox\" name=\"\" value=\"1\"/>\n\t    * </span>\n\t    */\n\t    var customCheckboxes = {\n\t\n\t        /**\n\t        * This class specifies checked custom-checkbox\n\t        * You may set it on serverisde\n\t        */\n\t        CHECKED_CLASS : 'checked',\n\t\n\t        init : function () {\n\t\n\t            var checkboxes = document.getElementsByClassName('js-custom-checkbox');\n\t\n\t            if (checkboxes.length) for (var i = checkboxes.length - 1; i >= 0; i--) {\n\t\n\t                checkboxes[i].addEventListener('click', codex.content.customCheckboxes.clicked, false);\n\t\n\t            }\n\t\n\t        },\n\t\n\t        clicked : function () {\n\t\n\t            var checkbox  = this,\n\t                input     = this.querySelector('input'),\n\t                isChecked = this.classList.contains(codex.content.customCheckboxes.CHECKED_CLASS);\n\t\n\t            checkbox.classList.toggle(codex.content.customCheckboxes.CHECKED_CLASS);\n\t\n\t            if (isChecked) {\n\t\n\t                input.removeAttribute('checked');\n\t\n\t            } else {\n\t\n\t                input.setAttribute('checked', 'checked');\n\t\n\t            }\n\t\n\t        }\n\t    };\n\t\n\t    var approvalButtons = {\n\t\n\t        CLICKED_CLASS : 'click-again-to-approve',\n\t\n\t        init : function () {\n\t\n\t            var buttons = document.getElementsByClassName('js-approval-button');\n\t\n\t            if (buttons.length) for (var i = buttons.length - 1; i >= 0; i--) {\n\t\n\t                buttons[i].addEventListener('click', codex.content.approvalButtons.clicked, false);\n\t\n\t            }\n\t\n\t        },\n\t\n\t        clicked : function (event) {\n\t\n\t            var button    = this,\n\t                isClicked = this.classList.contains(codex.content.approvalButtons.CLICKED_CLASS);\n\t\n\t            if (!isClicked) {\n\t\n\t                /* временное решение, пока нет всплывающего окна подверждения важных действий */\n\t                button.classList.add(codex.content.approvalButtons.CLICKED_CLASS);\n\t\n\t                event.preventDefault();\n\t\n\t            }\n\t\n\t        }\n\t    };\n\t\n\t    return {\n\t\n\t        toggleMobileMenu : toggleMobileMenu,\n\t        customCheckboxes : customCheckboxes,\n\t        approvalButtons : approvalButtons\n\t\n\t    };\n\t\n\t}());\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Appender is being used for ajax-loading next pages of lists\n\t *\n\t *    codex.appender.init({\n\t *        buttonId      : 'buttonLoadNews',       // button for listening\n\t *        currentPage   : '<?= $page_number ?>',    // currentPage number\n\t *        url           : '/',                      // url for ajax-requests\n\t *        targetBlockId : 'list_of_news',           // target for appending\n\t *        autoLoading   : true,                     // allow loading when reach bottom while scrolling\n\t *    });\n\t */\n\t\n\tvar appender = {\n\t\n\t    /* Pagination. Here is a number of current page */\n\t    page : 1,\n\t\n\t    settings : null,\n\t\n\t    blockForItems : null,\n\t\n\t    loadMoreButton : null,\n\t\n\t    /**\n\t     * Button's text for saving it.\n\t     * On its place dots will be while news are loading\n\t     */\n\t    buttonText : null,\n\t\n\t    init : function (settings) {\n\t\n\t        this.settings = settings;\n\t\n\t        /* Checking for existing button and field for loaded info */\n\t        this.loadMoreButton = document.getElementById(this.settings.buttonId);\n\t\n\t        if (!this.loadMoreButton) return false;\n\t\n\t        this.blockForItems = document.getElementById(this.settings.targetBlockId);\n\t\n\t        if (!this.blockForItems) return false;\n\t\n\t        this.page       = settings.currentPage;\n\t        this.buttonText = this.loadMoreButton.innerHTML;\n\t\n\t        if (this.settings.autoLoading) this.autoLoading.isAllowed = true;\n\t\n\t        this.loadMoreButton.addEventListener('click', function (event) {\n\t\n\t            codex.appender.load();\n\t\n\t            event.preventDefault();\n\t\n\t            codex.appender.autoLoading.init();\n\t\n\t        }, false);\n\t\n\t    },\n\t\n\t    load : function () {\n\t\n\t        var requestUrl = this.settings.url + (parseInt(this.page) + 1);\n\t            // separator   = '<a href=\"' + requestUrl + '\"><div class=\"article post-list-item w_island separator\">Page ' + (parseInt(this.page) + 1) + '</div></a>';\n\t\n\t        codex.ajax.call({\n\t            type: 'post',\n\t            url: requestUrl,\n\t            data: {},\n\t            beforeSend : function () {\n\t\n\t                codex.appender.loadMoreButton.classList.add('loading');\n\t\n\t            },\n\t            success : function (response) {\n\t\n\t                response = JSON.parse(response);\n\t\n\t                if (response.success) {\n\t\n\t                    if (!response.pages) return;\n\t\n\t                    /* Append items */\n\t                    // codex.appender.blockForItems.innerHTML += separator;\n\t                    codex.appender.blockForItems.innerHTML += response.pages;\n\t\n\t                    /* Next page */\n\t                    codex.appender.page++;\n\t\n\t                    if (codex.appender.settings.autoLoading) {\n\t\n\t                        /* Removing restriction for auto loading */\n\t                        codex.appender.autoLoading.canLoad = true;\n\t\n\t                    }\n\t\n\t                    /* Checking for next page's existing. If no — hide the button for loading news and remove listener */\n\t                    if (!response.next_page) codex.appender.disable();\n\t\n\t                } else {\n\t\n\t                    codex.core.showException('Не удалось подгрузить новости');\n\t\n\t                }\n\t\n\t                codex.appender.loadMoreButton.classList.remove('loading');\n\t\n\t            }\n\t\n\t        });\n\t\n\t    },\n\t\n\t    disable : function () {\n\t\n\t        codex.appender.loadMoreButton.style.display = 'none';\n\t\n\t        if (codex.appender.autoLoading.isLaunched) {\n\t\n\t            codex.appender.autoLoading.disable();\n\t\n\t        }\n\t\n\t    },\n\t\n\t    autoLoading : {\n\t\n\t        isAllowed : false,\n\t\n\t        isLaunched : false,\n\t\n\t        /**\n\t         * Possibility to load news by scrolling.\n\t         * Restriction for reduction requests which could be while scrolling\n\t         */\n\t        canLoad : true,\n\t\n\t        init : function () {\n\t\n\t            if (!this.isAllowed) return;\n\t\n\t            window.addEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\t\n\t            codex.appender.autoLoading.isLaunched = true;\n\t\n\t        },\n\t\n\t        disable : function () {\n\t\n\t            window.removeEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\t\n\t            codex.appender.autoLoading.isLaunched = false;\n\t\n\t        },\n\t\n\t        scrollEvent : function () {\n\t\n\t            var scrollReachedEnd = window.pageYOffset + window.innerHeight >= document.body.clientHeight;\n\t\n\t            if (scrollReachedEnd && codex.appender.autoLoading.canLoad) {\n\t\n\t                codex.appender.autoLoading.canLoad = false;\n\t\n\t                codex.appender.load();\n\t\n\t            }\n\t\n\t        },\n\t\n\t    }\n\t\n\t};\n\t\n\tmodule.exports = appender;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Parser module\n\t * @author Taly Guryn\n\t */\n\tvar parser = {\n\t\n\t    input : null,\n\t\n\t    init : function () {\n\t\n\t        // this.input = document.getElementById(settings.input_id);\n\t\n\t        var _this = this;\n\t\n\t        this.input.addEventListener('paste', function () {\n\t\n\t            _this.inputPasteCallback();\n\t\n\t        }, false);\n\t\n\t    },\n\t\n\t    inputPasteCallback : function () {\n\t\n\t        var e = this.input;\n\t\n\t        var _this = this;\n\t\n\t        window.setTimeout(function () {\n\t\n\t            _this.sendRequest(e.value);\n\t\n\t        }, 100);\n\t\n\t    },\n\t\n\t\n\t    sendRequest : function (url) {\n\t\n\t        codex.core.ajax({\n\t            type: 'get',\n\t            url: '/ajax/get_page',\n\t            data: { 'url' : url },\n\t            success: function (response) {\n\t\n\t                var title, content, sourceLink;\n\t\n\t                if ( response.success == 1) {\n\t\n\t                    title = document.getElementById('page_form_title');\n\t                    content = document.getElementById('page_form_content');\n\t                    sourceLink = document.getElementById('source_link');\n\t\n\t                    title.value = response.title;\n\t                    content.value = response.article;\n\t                    sourceLink.value = url;\n\t\n\t                    // while we have no own editor, we should use this getting element\n\t                    // cause I can't edit code for external editor\n\t                    document.getElementsByClassName('redactor_redactor')[0].innerHTML = response.article;\n\t\n\t                } else {\n\t\n\t                    codex.core.showException('Не удалось импортировать страницу');\n\t\n\t                }\n\t\n\t            }\n\t\n\t        });\n\t\n\t    }\n\t};\n\t\n\tmodule.exports = parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Comments module\n\t * @author  @guryn @neSpecc\n\t * @copyright CodeX Team https://github.com/codex-team\n\t * @version 1.1.0\n\t */\n\tmodule.exports = (function () {\n\t\n\t    var commentsList = null,\n\t        anchor       = document.location.hash;\n\t\n\t    var CSS_ = {\n\t        replyForm :         'comments-form',\n\t        replyTextarea :     'comment-form__text',\n\t        replyOpened :       'comment-form__placeholder--opened',\n\t        replySubmitButton : 'comment-form__button',\n\t        highlighted :       'comment--highligthed'\n\t    };\n\t\n\t    /**\n\t     * Initialize comments\n\t     * @param {object} data        params\n\t     * @param {sring} data.listId  comments list wrapper id\n\t     */\n\t    function init(data) {\n\t\n\t        commentsList = document.getElementById(data.listId);\n\t\n\t        if (anchor) {\n\t\n\t            highligthAnchor();\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Remove holder and append form for comment\n\t     * @param {Element} placeholder 'Write reply...' button\n\t     */\n\t    function reply( replyButton ) {\n\t\n\t        /** If reply already opened, do noting */\n\t        if ( replyButton.classList.contains( CSS_.replyOpened ) ) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        /** Get reply params from dataset */\n\t        var replyParams = {\n\t            parentId : replyButton.dataset.parentId,\n\t            rootId   : replyButton.dataset.rootId,\n\t            action   : replyButton.dataset.action\n\t        };\n\t\n\t        /** Create reply form */\n\t        var form = createForm( replyParams );\n\t\n\t        /** Insert form after reply button */\n\t        codex.core.insertAfter( replyButton, form );\n\t\n\t        replyButton.classList.add( CSS_.replyOpened );\n\t        getFormTextarea(form).focus();\n\t\n\t    }\n\t\n\t    /**\n\t     * Returns reply form\n\t     *\n\t     * @param {object} params\n\t     * @param {Number} params.parentId     parent comment's id\n\t     * @param {Number} params.rootId       root comment's id\n\t     * @param {String} params.action       URL for saving\n\t     *\n\t     * @return {Element} element that holds textarea and submit-button\n\t     */\n\t    function createForm( params ) {\n\t\n\t        var textarea     = createTextarea(),\n\t            button       = createButton(),\n\t            form         = document.createElement('DIV');\n\t\n\t        form.classList.add(CSS_.replyForm);\n\t\n\t        /** Store data in Textarea */\n\t        textarea.dataset.parentId = params.parentId;\n\t        textarea.dataset.rootId   = params.rootId;\n\t        textarea.dataset.action   = params.action;\n\t\n\t        form.appendChild(textarea);\n\t        form.appendChild(button);\n\t\n\t        return form;\n\t\n\t    }\n\t\n\t    /** Return textarea for form for comment */\n\t    function createTextarea() {\n\t\n\t        var textarea = document.createElement('TEXTAREA');\n\t\n\t        textarea.classList.add(CSS_.replyTextarea);\n\t        textarea.placeholder = 'Ваш комментарий';\n\t\n\t        textarea.addEventListener('keydown', keydownSubmitHandler, false);\n\t        textarea.addEventListener('blur', blurTextareaHandler, false);\n\t\n\t        codex.autoresizeTextarea.addListener(textarea);\n\t\n\t        return textarea;\n\t\n\t    }\n\t\n\t    /** Return submit button for form*/\n\t    function createButton() {\n\t\n\t        var button = document.createElement('DIV');\n\t\n\t        button.classList.add( CSS_.replySubmitButton, 'button', 'master');\n\t        button.textContent = 'Отправить';\n\t\n\t        button.addEventListener('click', submitClicked_, false);\n\t\n\t        return button;\n\t\n\t    }\n\t\n\t    /**\n\t     * Reply submit button click handler\n\t     */\n\t    function submitClicked_() {\n\t\n\t        var submit = this,\n\t            form   = submit.parentNode,\n\t            textarea = getFormTextarea(form);\n\t\n\t        send_( textarea );\n\t\n\t    }\n\t\n\t    /* Return textarea for given form */\n\t    function getFormTextarea(form) {\n\t\n\t        return form.getElementsByTagName('TEXTAREA')[0];\n\t\n\t    }\n\t\n\t    /**\n\t     * Remove form on textarea blur\n\t     * @param {Event} blur Event\n\t     */\n\t    function blurTextareaHandler( event ) {\n\t\n\t        var textarea  = event.target,\n\t            form      = textarea.parentNode,\n\t            commentId = textarea.dataset.parentId;\n\t\n\t        if (!textarea.value.trim()) {\n\t\n\t            removeForm(form, commentId);\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Removes reply form\n\t     * @param {Element} form\n\t     * @param {Number} commentId   reply target comment id\n\t     */\n\t    function removeForm( form, commentId ) {\n\t\n\t        var replyButton = document.getElementById('reply' + commentId );\n\t\n\t        form.remove();\n\t        replyButton.classList.remove(CSS_.replyOpened);\n\t\n\t    }\n\t\n\t    /**\n\t     * Catch Ctrl+Enter or Cmd+Enter for send form\n\t     * @param {Event} event    Keydown Event\n\t     */\n\t    function keydownSubmitHandler(event) {\n\t\n\t        var ctrlPressed  = event.ctrlKey || event.metaKey,\n\t            enterPressed = event.keyCode == 13,\n\t            textarea = event.target;\n\t\n\t        if ( ctrlPressed && enterPressed ) {\n\t\n\t            send_( textarea );\n\t\n\t            event.preventDefault();\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Ajax function for submit comment\n\t     * @param {Element} textarea    input with dataset and text\n\t     */\n\t    function send_( textarea ) {\n\t\n\t        var formData  = new FormData(),\n\t            form      = textarea.parentNode,\n\t            submitBtn = form.querySelector('.' + CSS_.replySubmitButton),\n\t            rootId    = textarea.dataset.rootId,\n\t            parentId  = textarea.dataset.parentId,\n\t            actionURL = textarea.dataset.action;\n\t\n\t        formData.append('root_id', rootId);\n\t        formData.append('parent_id', parentId);\n\t        formData.append('comment_text', textarea.value);\n\t        formData.append('csrf', window.csrf);\n\t\n\t        codex.ajax.call({\n\t            type: 'POST',\n\t            url: actionURL,\n\t            data: formData,\n\t            beforeSend : function () {\n\t\n\t                submitBtn.classList.add('loading');\n\t\n\t            },\n\t            success : function (response) {\n\t\n\t                var comment,\n\t                    emptyCommentsBlock;\n\t\n\t                submitBtn.classList.remove('loading');\n\t\n\t                response = JSON.parse(response);\n\t\n\t                if (response.success) {\n\t\n\t                    /** Remove form and return placeholder */\n\t                    removeForm(form, parentId);\n\t\n\t                    emptyCommentsBlock = document.querySelector('.js-empty-comments');\n\t\n\t                    if (emptyCommentsBlock) {\n\t\n\t                        emptyCommentsBlock.remove();\n\t\n\t                    }\n\t\n\t                    comment = codex.core.parseHTML(response.comment)[0];\n\t                    commentsList.appendChild(comment);\n\t\n\t                    // Scroll down to new comment\n\t                    window.scrollTo(0, document.body.scrollHeight);\n\t\n\t                    // Highligth new comment\n\t                    highligthComment(response.commentId);\n\t\n\t\n\t                } else {\n\t\n\t                    codex.alerts.show(response.error);\n\t\n\t                }\n\t\n\t            }\n\t\n\t        });\n\t\n\t    }\n\t\n\t    /**\n\t     * Highligth comment by id for a time\n\t     * @param {Number} commentId   id comment to highlight\n\t     */\n\t    function highligthComment(commentId) {\n\t\n\t        var comment = document.getElementById('comment' + commentId);\n\t\n\t        comment.classList.add(CSS_.highlighted);\n\t\n\t        window.setTimeout(function () {\n\t\n\t            comment.classList.remove(CSS_.highlighted);\n\t\n\t        }, 500);\n\t\n\t    }\n\t\n\t    /** Highligth comment if anchor is in url */\n\t    function highligthAnchor() {\n\t\n\t        var numbers = anchor.match(/\\d+/),\n\t            commentId;\n\t\n\t        if (!numbers) return;\n\t\n\t        commentId = numbers[0];\n\t\n\t        highligthComment(commentId);\n\t\n\t    }\n\t\n\t    return {\n\t        init : init,\n\t        reply : reply\n\t    };\n\t\n\t}());\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t* Notifications tips module\n\t*/\n\tmodule.exports = (function () {\n\t\n\t    __webpack_require__(11);\n\t\n\t    var CSS_ = {\n\t        wrapper : 'exceptionWrapper',\n\t        exception : 'clientException'\n\t    };\n\t\n\t    var wrapper_ = null;\n\t\n\t    function prepare_() {\n\t\n\t        if ( wrapper_ ) {\n\t\n\t            return true;\n\t\n\t        }\n\t\n\t        wrapper_ = document.createElement('DIV');\n\t        wrapper_.classList.add(CSS_.wrapper);\n\t\n\t        document.body.appendChild(wrapper_);\n\t\n\t    }\n\t\n\t    /**\n\t    * @param {String} message - may content HTML\n\t    */\n\t    function show(message) {\n\t\n\t        prepare_();\n\t\n\t        var notify = document.createElement('DIV');\n\t\n\t        notify.classList.add(CSS_.exception);\n\t        notify.innerHTML = message;\n\t\n\t        wrapper_.appendChild(notify);\n\t\n\t        notify.classList.add('bounceIn');\n\t\n\t        window.setTimeout(function () {\n\t\n\t            notify.remove();\n\t\n\t        }, 8000);\n\t\n\t    }\n\t\n\t    return {\n\t        show : show\n\t    };\n\t\n\t})({});\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Module for comments textarea autoresize\n\t*/\n\tmodule.exports = (function () {\n\t\n\t    /**\n\t    * Textareas initialization\n\t    */\n\t    var init = function () {\n\t\n\t        var textareas = document.getElementsByClassName('js-autoresizable');\n\t\n\t        if (textareas.length) {\n\t\n\t            for (var i = 0; i < textareas.length; i++) {\n\t\n\t                addListener(textareas[i]);\n\t\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t\n\t    /**\n\t    * Add input event listener to textarea\n\t    *\n\t    * @param {Element} textarea — node which need to be able to autoresize\n\t    */\n\t    var addListener = function (textarea) {\n\t\n\t        textarea.addEventListener('input', textareaChanged, false);\n\t\n\t    };\n\t\n\t    /**\n\t    * Hanging events on textareas\n\t    */\n\t    var textareaChanged = function (event) {\n\t\n\t        var textarea = event.target;\n\t\n\t        checkScrollHeight(textarea);\n\t\n\t    };\n\t\n\t    /**\n\t    * Increasing textarea height\n\t    */\n\t    var checkScrollHeight = function (textarea) {\n\t\n\t        if (textarea.scrollHeight > textarea.clientHeight) {\n\t\n\t            textarea.style.height = textarea.scrollHeight + 'px';\n\t\n\t        }\n\t\n\t    };\n\t\n\t    return {\n\t        init: init,\n\t        addListener : addListener\n\t    };\n\t\n\t}());\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function () {\n\t\n\t    var init = function () {\n\t\n\t        bindEvents();\n\t\n\t    };\n\t\n\t    var bindEvents = function () {\n\t\n\t        var repeatConfirmEmailBtn = document.getElementById('repeat-email-confirmation');\n\t\n\t        repeatConfirmEmailBtn.addEventListener('click', sendEmeailConfirmation);\n\t\n\t    };\n\t\n\t    var sendEmeailConfirmation = function (e) {\n\t\n\t        var success = function (response) {\n\t\n\t            response = JSON.parse(response);\n\t\n\t            codex.alerts.show(response.message);\n\t            e.target.classList.remove('loading');\n\t\n\t        };\n\t\n\t        e.target.classList.add('loading');\n\t\n\t        codex.ajax.call({\n\t            url: '/ajax/confirmation-email',\n\t            success: success\n\t        });\n\t\n\t    };\n\t\n\t    return {\n\t        init: init\n\t    };\n\t\n\t}();\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tvar sharer = {\n\t\n\t    init : function () {\n\t\n\t        var shareButtons = document.querySelectorAll('.js-share');\n\t\n\t        for (var i = shareButtons.length - 1; i >= 0; i--) {\n\t\n\t            shareButtons[i].addEventListener('click', sharer.click, true);\n\t\n\t        }\n\t\n\t    },\n\t\n\t    shareVk : function (data) {\n\t\n\t        var link  = 'https://vk.com/share.php?';\n\t\n\t        link += 'url='          + data.url;\n\t        link += '&title='       + data.title;\n\t        link += '&description=' + data.desc;\n\t        link += '&image='       + data.img;\n\t        link += '&noparse=true';\n\t\n\t        this.popup( link, 'vkontakte'  );\n\t\n\t    },\n\t\n\t    shareFacebook : function (data) {\n\t\n\t        var FB_APP_ID = 1740455756240878,\n\t            link      = 'https://www.facebook.com/dialog/share?display=popup';\n\t\n\t        link += '&app_id='       + FB_APP_ID;\n\t        link += '&href='         + data.url;\n\t        link += '&redirect_uri=' + document.location.href;\n\t\n\t        this.popup( link, 'facebook' );\n\t\n\t    },\n\t\n\t    shareTwitter : function (data) {\n\t\n\t        var link = 'https://twitter.com/share?';\n\t\n\t        link += 'text='      + data.title;\n\t        link += '&url='      + data.url;\n\t        link += '&counturl=' + data.url;\n\t\n\t        this.popup( link, 'twitter' );\n\t\n\t    },\n\t\n\t    shareTelegram : function (data) {\n\t\n\t        var link  = 'https://telegram.me/share/url';\n\t\n\t        link += '?text=' + data.title;\n\t        link += '&url='  + data.url;\n\t\n\t        this.popup( link, 'telegram' );\n\t\n\t    },\n\t\n\t    popup : function ( url, socialType ) {\n\t\n\t        window.open( url, '', 'toolbar=0,status=0,width=626,height=436' );\n\t\n\t        /**\n\t         * Write analytics goal\n\t         */\n\t        if ( window.yaCounter32652805 ) {\n\t\n\t            window.yaCounter32652805.reachGoal('article-share', function () {}, this, {type: socialType, url: url});\n\t\n\t        }\n\t\n\t    },\n\t\n\t    click : function (event) {\n\t\n\t        var target = event.target;\n\t\n\t        /**\n\t         * Social provider stores in data 'shareType' attribute on share-button\n\t         * But click may be fired on child-element in button, so we need to handle it.\n\t         */\n\t        var type = target.dataset.shareType || target.parentNode.dataset.shareType;\n\t\n\t        if (!sharer[type]) return;\n\t\n\t        /**\n\t         * Sanitize share params\n\t         * @todo test for taint strings\n\t         */\n\t            // for (key in window.shareData){\n\t            //      window.shareData[key] = encodeURIComponent(window.shareData[key]);\n\t            // }\n\t\n\t        var shareData = {\n\t\n\t            url:    target.dataset.url || target.parentNode.dataset.url,\n\t            title:  target.dataset.title || target.parentNode.dataset.title,\n\t            desc:   target.dataset.desc || target.parentNode.dataset.desc,\n\t            img:    target.dataset.img || target.parentNode.dataset.title\n\t\n\t        };\n\t\n\t        /**\n\t         * Fire click handler\n\t         */\n\t\n\t        sharer[type](shareData);\n\t\n\t    }\n\t\n\t};\n\t\n\tmodule.exports = sharer;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// public/build/bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d34d89c3657a9efef8fd","/**\n* Require CSS build\n*/\nrequire('../css/main.css');\n\n/**\n* Codex client\n* @author Savchenko Peter <specc.dev@gmail.com>\n*/\ncodex = (function (codex) {\n\n    'use strict';\n\n    /**\n    * Static nodes cache\n    */\n    codex.nodes = {\n        content : null\n    };\n\n    codex.init = function () {\n\n        /**\n        * Stylize custom checkboxes\n        */\n        codex.content.customCheckboxes.init();\n\n        /**\n        * Init approval buttons\n        */\n        codex.content.approvalButtons.init();\n\n        codex.autoresizeTextarea.init();\n\n        /**\n        * Init CodeX Special module for contrast version\n        * @see https://github.com/codex-team/codex.special\n        */\n        window.codexSpecial.init({\n            blockId : 'js-contrast-version-holder',\n        });\n\n        codex.core.log('Initialized', 'App init', 'info');\n\n    };\n\n    return codex;\n\n})({});\n\n/**\n* Document ready handler\n*/\ncodex.docReady = function (f) {\n\n    /in/.test(document.readyState) ? window.setTimeout(codex.docReady, 9, f) : f();\n\n};\n\n\n/**\n* Load modules\n*/\ncodex.core               = require('./modules/core');\ncodex.ajax               = require('./modules/ajax');\ncodex.transport          = require('./modules/transport');\ncodex.content            = require('./modules/content');\ncodex.appender           = require('./modules/appender');\ncodex.parser             = require('./modules/parser');\ncodex.comments           = require('./modules/comments');\ncodex.alerts             = require('./modules/alerts');\ncodex.autoresizeTextarea = require('./modules/autoresizeTextarea');\ncodex.profileSettings    = require('./modules/profileSettings');\ncodex.sharer             = require('./modules/sharer');\n\nmodule.exports = codex;\n\ncodex.docReady(function () {\n\n    codex.init();\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/main.js\n// module id = 0\n// module chunks = 0","/**\n* Significant core methods\n*/\n\nmodule.exports = {\n\n    /** Logging method */\n    log : function (str, prefix, type, arg) {\n\n        var staticLength = 32;\n\n        if (prefix) {\n\n            prefix = prefix.length < staticLength ? prefix : prefix.substr( 0, staticLength - 2 );\n\n            while (prefix.length < staticLength - 1) {\n\n                prefix += ' ';\n\n            }\n\n            prefix += ':';\n            str = prefix + str;\n\n        }\n\n        type = type || 'log';\n\n        try {\n\n            if ('console' in window && window.console[ type ]) {\n\n                if (arg) console[type](str, arg);\n                else console[type](str);\n\n            }\n\n        } catch(e) {}\n\n    },\n\n    /**\n    * @return {object} dom element real offset\n    */\n    getOffset : function (elem) {\n\n        var docElem, win, rect, doc;\n\n        if (!elem) {\n\n            return;\n\n        }\n\n        /**\n        * Support: IE <=11 only\n        * Running getBoundingClientRect on a\n        * disconnected node in IE throws an error\n        */\n        if (!elem.getClientRects().length) {\n\n            return {\n                top: 0,\n                left: 0\n            };\n\n        }\n\n        rect = elem.getBoundingClientRect();\n\n        /** Make sure element is not hidden (display: none) */\n        if (rect.width || rect.height) {\n\n            doc = elem.ownerDocument;\n            win = window;\n            docElem = doc.documentElement;\n\n            return {\n                top: rect.top + win.pageYOffset - docElem.clientTop,\n                left: rect.left + win.pageXOffset - docElem.clientLeft\n            };\n\n        }\n\n        /** Return zeros for disconnected and hidden elements (gh-2310) */\n        return rect;\n\n    },\n\n    /**\n    * Checks if element visible on screen at the moment\n    * @param {Element} - HTML NodeElement\n    */\n    isElementOnScreen : function (el) {\n\n        var elPositon    = codex.core.getOffset(el).top,\n            screenBottom = window.scrollY + window.innerHeight;\n\n        return screenBottom > elPositon;\n\n    },\n\n    /**\n    * Returns computed css styles for element\n    * @param {Element} el\n    */\n    css : function (el) {\n\n        return window.getComputedStyle(el);\n\n    },\n\n    /**\n    * Helper for inserting one element after another\n    */\n    insertAfter : function (target, element) {\n\n        target.parentNode.insertBefore(element, target.nextSibling);\n\n    },\n\n    /**\n    * Replaces node with\n    * @param {Element} nodeToReplace\n    * @param {Element} replaceWith\n    */\n    replace : function (nodeToReplace, replaceWith) {\n\n        return nodeToReplace.parentNode.replaceChild(replaceWith, nodeToReplace);\n\n    },\n\n    /**\n    * Helper for insert one element before another\n    */\n    insertBefore : function (target, element) {\n\n        target.parentNode.insertBefore(element, target);\n\n    },\n\n    /**\n    * Returns random {int} between numbers\n    */\n    random : function (min, max) {\n\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n\n    },\n\n    /**\n    * Attach event to Element in parent\n    * @param {Element} parentNode    - Element that holds event\n    * @param {string} targetSelector - selector to filter target\n    * @param {string} eventName      - name of event\n    * @param {function} callback     - callback function\n    */\n    delegateEvent : function (parentNode, targetSelector, eventName, callback) {\n\n        parentNode.addEventListener(eventName, function (event) {\n\n            var el = event.target, matched;\n\n            while (el && !matched) {\n\n                matched = el.matches(targetSelector);\n\n                if (!matched) el = el.parentElement;\n\n            }\n\n            if (matched) {\n\n                callback.call(event.target, event, el);\n\n            }\n\n        }, true);\n\n    },\n\n\n    /**\n    * Readable DOM-node types map\n    */\n    nodeTypes : {\n        TAG     : 1,\n        TEXT    : 3,\n        COMMENT : 8,\n        DOCUMENT_FRAGMENT : 11\n    },\n\n    /**\n    * Readable keys map\n    */\n    keys : { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 },\n\n    /**\n    * @protected\n    * Check object for DOM node\n    */\n    isDomNode : function (el) {\n\n        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n\n    },\n\n    /**\n    * Parses string to nodeList\n    * Removes empty text nodes\n    * @param {string} inputString\n    * @return {array} of nodes\n    *\n    * Does not supports <tr> and <td> on firts level of inputString\n    */\n\n    parseHTML : function (inputString) {\n\n        // var templatesSupported = spark.supports.templates();\n\n        var contentHolder,\n            childs,\n            parsedNodes = [];\n\n        // if ( false &&   templatesSupported ) {\n\n        //     contentHolder = document.createElement('template');\n        //     contentHolder.innerHTML = inputString.trim();\n\n        //     console.log(\"contentHolder: %o\", contentHolder);\n\n        //     childs = contentHolder.content.cloneNode(true).childNodes;\n\n        // } else {\n\n        contentHolder = document.createElement('div');\n        contentHolder.innerHTML = inputString.trim();\n\n        childs = contentHolder.childNodes;\n\n        // }\n\n\n        /**\n        * Iterate childNodes and remove empty Text Nodes on first-level\n        */\n        for (var i = 0, node; !!(node = childs[i]); i++) {\n\n            if (node.nodeType == codex.core.nodeTypes.TEXT && !node.textContent.trim()) {\n\n                continue;\n\n            }\n\n            parsedNodes.push(node);\n\n        }\n\n        return parsedNodes;\n\n    },\n\n    /**\n    * Checks passed object for emptiness\n    * @require ES5 - Object.keys\n    * @param {object}\n    */\n    isEmpty : function (obj) {\n\n        return Object.keys(obj).length === 0;\n\n    },\n\n    /**\n    * Check for Element visibility\n    * @param {Element} el\n    */\n    isVisible : function (el) {\n\n        return el.offsetParent !== null;\n\n    },\n\n    setCookie : function (name, value, expires, path, domain) {\n\n        var str = name + '=' + value;\n\n        if (expires) str += '; expires=' + expires.toGMTString();\n        if (path)    str += '; path=' + path;\n        if (domain)  str += '; domain=' + domain;\n\n        document.cookie = str;\n\n    },\n\n    getCookie : function (name) {\n\n        var dc = document.cookie;\n\n        var prefix = name + '=',\n            begin = dc.indexOf('; ' + prefix);\n\n        if (begin == -1) {\n\n            begin = dc.indexOf(prefix);\n            if (begin !== 0) return null;\n\n        } else\n            begin += 2;\n\n        var end = document.cookie.indexOf(';', begin);\n\n        if (end == -1) end = dc.length;\n\n        return unescape(dc.substring(begin + prefix.length, end));\n\n    },\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/core.js\n// module id = 3\n// module chunks = 0","/**\n* AJAX module\n*/\nvar ajax = (function () {\n\n    /**\n    * @usage codex.ajax.call();\n    */\n    var call = function (data) {\n\n        if (!data || !data.url) return;\n\n        var XMLHTTP          = window.XMLHttpRequest ? new window.XMLHttpRequest() : new window.ActiveXObject('Microsoft.XMLHTTP'),\n            successFunction  = function () {};\n\n        data.async           = true;\n        data.type            = data.type || 'GET';\n        data.data            = data.data || '';\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n        successFunction      = data.success || successFunction;\n\n        if (data.type == 'GET' && data.data) {\n\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\n        }\n\n        if (data.withCredentials) {\n\n            XMLHTTP.withCredentials = true;\n\n        }\n\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\n\n            data.beforeSend.call();\n\n        }\n\n        XMLHTTP.open(data.type, data.url, data.async);\n\n        /**\n        * If we send FormData, we need no content-type header\n        */\n        if (!isFormData(data.data)) {\n\n            XMLHTTP.setRequestHeader('Content-type', data['content-type']);\n\n        }\n\n        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        XMLHTTP.onreadystatechange = function () {\n\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n\n                successFunction(XMLHTTP.responseText);\n\n            }\n\n        };\n\n        XMLHTTP.send(data.data);\n\n    };\n\n    /**\n     * Function for checking is it FormData object to send.\n     * @param {Object} object to check\n     * @return boolean\n     */\n    function isFormData(object) {\n\n        return typeof object.append === 'function';\n\n    };\n\n    return {\n\n        call : call\n\n    };\n\n}());\n\nmodule.exports = ajax;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/ajax.js\n// module id = 4\n// module chunks = 0","/**\n* File transport module\n*/\n\nvar transport = {\n\n    transportURL : '/file/transport',\n\n    /**\n    * Field for file\n    */\n    input : null,\n\n    /**\n    * Current transport type\n    */\n    type : null,\n\n    /**\n    * @uses for store inputed filename to this.files\n    */\n    keydownFinishedTimeout : null,\n\n    /**\n    * Current attaches will be stored in this object\n    * @see this.storeFile\n    */\n    files : {},\n\n    /**\n    * Create element and add listener\n    */\n    prepare : function () {\n\n        var input = document.createElement('INPUT');\n\n        input.type = 'file';\n        input.addEventListener('change', this.fileSelected);\n\n        this.input = input;\n\n    },\n\n    /**\n    * Clear input and type. Ready for getting new file\n    */\n    clearInput : function () {\n\n        /** Remove old input */\n        this.input = null;\n\n        this.type = null;\n\n    },\n\n    /**\n    * Choose-file button click handler\n    */\n    selectFile : function (event, type) {\n\n        this.prepare();\n\n        this.type = type;\n\n        this.input.click();\n\n    },\n\n    /**\n    * Send file to server when select\n    */\n    fileSelected : function () {\n\n        var type        = transport.type,\n            input       = this,\n            files       = input.files,\n            formData    = new FormData();\n\n        formData.append('type', type);\n\n        formData.append('files', files[0], files[0].name);\n\n        codex.ajax.call({\n            type : 'POST',\n            url : transport.transportURL,\n            data : formData,\n            success : transport.responseForPageForm,\n            beforeSend : transport.beforeSendPageForm,\n        });\n\n        transport.clearInput();\n\n    },\n\n    beforeSendPageForm : function () {\n\n        // add loader\n\n    },\n\n    /**\n    * Save file info into page form or show exception\n    */\n    responseForPageForm : function (response) {\n\n        // stop loader\n\n        response = JSON.parse(response);\n\n        if (response.success && response.title) {\n\n            transport.storeFile(response);\n\n        } else {\n\n            codex.alerts.show(response.message);\n\n        }\n\n    },\n\n    /**\n    * Store file in memory\n    * Attaches list will be sent form submitting\n    */\n    storeFile : function (file) {\n\n        if (!file || !file.id) return;\n\n        this.files[file.id] = {\n            'title' : file.title,\n            'id'    : file.id\n        };\n\n        this.appendFileRow(file);\n\n    },\n\n    /**\n    * Appends saved file to form\n    * Allow edit name by contenteditable element\n    */\n    appendFileRow : function (file) {\n\n        var attachesZone = document.getElementById('formAttaches'),\n            row          = document.createElement('div'),\n            filename     = document.createElement('span'),\n            deleteButton = document.createElement('span');\n\n        row.classList.add('item');\n\n        switch (file.type) {\n            case '1': filename.classList.add('item_file'); break;\n            case '2': filename.classList.add('item_image'); break;\n            default: break;\n        }\n\n        filename.textContent = file.title;\n        filename.setAttribute('contentEditable', true);\n\n        deleteButton.classList.add('fl_r', 'button-delete', 'icon-trash');\n        deleteButton.addEventListener('click', function () {\n\n            if (this.parentNode.dataset.readyForDelete) {\n\n                delete codex.transport.files[file.id];\n                this.parentNode.remove();\n\n            }\n\n            this.parentNode.dataset.readyForDelete = true;\n            this.classList.add('button-delete__ready-to-delete');\n            this.innerHTML = 'Удалить документ';\n\n        }, false);\n\n        row.appendChild(filename);\n        row.appendChild(deleteButton);\n\n        attachesZone.appendChild(row);\n\n        /** Save ID to determine which filename edited */\n        row.dataset.id = file.id;\n        row.addEventListener('input', this.storeFileName, false);\n\n    },\n\n    /**\n    * Saves filename from input to this.files object\n    */\n    storeFileName : function () {\n\n        /**\n        * Clear previous keydown-timeout\n        */\n        if (codex.transport.keydownFinishedTimeout) {\n\n            window.clearTimeout(codex.transport.keydownFinishedTimeout);\n\n        }\n\n        var input = this;\n\n        /**\n        * Start waiting to input finished, then save value to this.files\n        */\n        codex.transport.keydownFinishedTimeout = window.setTimeout(function () {\n\n            var id    = input.dataset.id,\n                title = input.textContent.trim();\n\n            if (title) {\n\n                codex.transport.files[id].title = title;\n\n            }\n\n        }, 200);\n\n\n    },\n\n    /**\n    * Prepares and submit form\n    * Send attaches by json-encoded stirng with hidden input\n    */\n    submitAtlasForm : function () {\n\n        var atlasForm = document.forms.atlas;\n\n        if (!atlasForm) return;\n\n\n\n        var attachesInput = document.createElement('input');\n\n        attachesInput.type = 'hidden';\n        attachesInput.name = 'attaches';\n        attachesInput.value = JSON.stringify(this.files);\n\n        atlasForm.appendChild(attachesInput);\n\n        /** CodeX.Editor */\n        var JSONinput = document.getElementById('json_result');\n\n        /**\n         * Save blocks\n         */\n        codex.editor.saver.saveBlocks();\n\n        window.setTimeout(function () {\n\n            var blocksCount = codex.editor.state.jsonOutput.length;\n\n            if (!blocksCount) {\n\n                JSONinput.innerHTML = '';\n\n            } else {\n\n                JSONinput.innerHTML = JSON.stringify({ data: codex.editor.state.jsonOutput} );\n\n            }\n\n            /**\n             * Send form\n             */\n            atlasForm.submit();\n\n        }, 100);\n\n    },\n\n    /**\n    * Submits editor form for opening in full-screan page without saving\n    */\n    openEditorFullscrean : function () {\n\n        var atlasForm = document.forms.atlas,\n            openEditorFlagInput = document.createElement('input');\n\n        openEditorFlagInput.type = 'hidden';\n        openEditorFlagInput.name = 'openFullScreen';\n        openEditorFlagInput.value = 1;\n\n        atlasForm.append(openEditorFlagInput);\n\n        this.submitAtlasForm();\n\n    }\n\n};\n\nmodule.exports = transport;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/transport.js\n// module id = 5\n// module chunks = 0","/**\n* Operations with pages\n*/\nmodule.exports = (function () {\n\n    /**\n    * Toggles mobile menu\n    * Handles clicks on the hamburger icon in header\n    */\n    var toggleMobileMenu = function ( event ) {\n\n        var menu = document.getElementById('js-mobile-menu-holder'),\n            openedClass = 'mobile-menu-holder--opened';\n\n        menu.classList.toggle(openedClass);\n\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        event.preventDefault();\n\n    };\n\n    /**\n    * Module uses for toggle custom checkboxes\n    * that has 'js-custom-checkbox' class and input[type=\"checkbox\"] included\n    * Example:\n    * <span class=\"js-custom-checkbox\">\n    *    <input type=\"checkbox\" name=\"\" value=\"1\"/>\n    * </span>\n    */\n    var customCheckboxes = {\n\n        /**\n        * This class specifies checked custom-checkbox\n        * You may set it on serverisde\n        */\n        CHECKED_CLASS : 'checked',\n\n        init : function () {\n\n            var checkboxes = document.getElementsByClassName('js-custom-checkbox');\n\n            if (checkboxes.length) for (var i = checkboxes.length - 1; i >= 0; i--) {\n\n                checkboxes[i].addEventListener('click', codex.content.customCheckboxes.clicked, false);\n\n            }\n\n        },\n\n        clicked : function () {\n\n            var checkbox  = this,\n                input     = this.querySelector('input'),\n                isChecked = this.classList.contains(codex.content.customCheckboxes.CHECKED_CLASS);\n\n            checkbox.classList.toggle(codex.content.customCheckboxes.CHECKED_CLASS);\n\n            if (isChecked) {\n\n                input.removeAttribute('checked');\n\n            } else {\n\n                input.setAttribute('checked', 'checked');\n\n            }\n\n        }\n    };\n\n    var approvalButtons = {\n\n        CLICKED_CLASS : 'click-again-to-approve',\n\n        init : function () {\n\n            var buttons = document.getElementsByClassName('js-approval-button');\n\n            if (buttons.length) for (var i = buttons.length - 1; i >= 0; i--) {\n\n                buttons[i].addEventListener('click', codex.content.approvalButtons.clicked, false);\n\n            }\n\n        },\n\n        clicked : function (event) {\n\n            var button    = this,\n                isClicked = this.classList.contains(codex.content.approvalButtons.CLICKED_CLASS);\n\n            if (!isClicked) {\n\n                /* временное решение, пока нет всплывающего окна подверждения важных действий */\n                button.classList.add(codex.content.approvalButtons.CLICKED_CLASS);\n\n                event.preventDefault();\n\n            }\n\n        }\n    };\n\n    return {\n\n        toggleMobileMenu : toggleMobileMenu,\n        customCheckboxes : customCheckboxes,\n        approvalButtons : approvalButtons\n\n    };\n\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/content.js\n// module id = 6\n// module chunks = 0","/**\n * Appender is being used for ajax-loading next pages of lists\n *\n *    codex.appender.init({\n *        buttonId      : 'buttonLoadNews',       // button for listening\n *        currentPage   : '<?= $page_number ?>',    // currentPage number\n *        url           : '/',                      // url for ajax-requests\n *        targetBlockId : 'list_of_news',           // target for appending\n *        autoLoading   : true,                     // allow loading when reach bottom while scrolling\n *    });\n */\n\nvar appender = {\n\n    /* Pagination. Here is a number of current page */\n    page : 1,\n\n    settings : null,\n\n    blockForItems : null,\n\n    loadMoreButton : null,\n\n    /**\n     * Button's text for saving it.\n     * On its place dots will be while news are loading\n     */\n    buttonText : null,\n\n    init : function (settings) {\n\n        this.settings = settings;\n\n        /* Checking for existing button and field for loaded info */\n        this.loadMoreButton = document.getElementById(this.settings.buttonId);\n\n        if (!this.loadMoreButton) return false;\n\n        this.blockForItems = document.getElementById(this.settings.targetBlockId);\n\n        if (!this.blockForItems) return false;\n\n        this.page       = settings.currentPage;\n        this.buttonText = this.loadMoreButton.innerHTML;\n\n        if (this.settings.autoLoading) this.autoLoading.isAllowed = true;\n\n        this.loadMoreButton.addEventListener('click', function (event) {\n\n            codex.appender.load();\n\n            event.preventDefault();\n\n            codex.appender.autoLoading.init();\n\n        }, false);\n\n    },\n\n    load : function () {\n\n        var requestUrl = this.settings.url + (parseInt(this.page) + 1);\n            // separator   = '<a href=\"' + requestUrl + '\"><div class=\"article post-list-item w_island separator\">Page ' + (parseInt(this.page) + 1) + '</div></a>';\n\n        codex.ajax.call({\n            type: 'post',\n            url: requestUrl,\n            data: {},\n            beforeSend : function () {\n\n                codex.appender.loadMoreButton.classList.add('loading');\n\n            },\n            success : function (response) {\n\n                response = JSON.parse(response);\n\n                if (response.success) {\n\n                    if (!response.pages) return;\n\n                    /* Append items */\n                    // codex.appender.blockForItems.innerHTML += separator;\n                    codex.appender.blockForItems.innerHTML += response.pages;\n\n                    /* Next page */\n                    codex.appender.page++;\n\n                    if (codex.appender.settings.autoLoading) {\n\n                        /* Removing restriction for auto loading */\n                        codex.appender.autoLoading.canLoad = true;\n\n                    }\n\n                    /* Checking for next page's existing. If no — hide the button for loading news and remove listener */\n                    if (!response.next_page) codex.appender.disable();\n\n                } else {\n\n                    codex.core.showException('Не удалось подгрузить новости');\n\n                }\n\n                codex.appender.loadMoreButton.classList.remove('loading');\n\n            }\n\n        });\n\n    },\n\n    disable : function () {\n\n        codex.appender.loadMoreButton.style.display = 'none';\n\n        if (codex.appender.autoLoading.isLaunched) {\n\n            codex.appender.autoLoading.disable();\n\n        }\n\n    },\n\n    autoLoading : {\n\n        isAllowed : false,\n\n        isLaunched : false,\n\n        /**\n         * Possibility to load news by scrolling.\n         * Restriction for reduction requests which could be while scrolling\n         */\n        canLoad : true,\n\n        init : function () {\n\n            if (!this.isAllowed) return;\n\n            window.addEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\n            codex.appender.autoLoading.isLaunched = true;\n\n        },\n\n        disable : function () {\n\n            window.removeEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\n            codex.appender.autoLoading.isLaunched = false;\n\n        },\n\n        scrollEvent : function () {\n\n            var scrollReachedEnd = window.pageYOffset + window.innerHeight >= document.body.clientHeight;\n\n            if (scrollReachedEnd && codex.appender.autoLoading.canLoad) {\n\n                codex.appender.autoLoading.canLoad = false;\n\n                codex.appender.load();\n\n            }\n\n        },\n\n    }\n\n};\n\nmodule.exports = appender;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/appender.js\n// module id = 7\n// module chunks = 0","/**\n * Parser module\n * @author Taly Guryn\n */\nvar parser = {\n\n    input : null,\n\n    init : function () {\n\n        // this.input = document.getElementById(settings.input_id);\n\n        var _this = this;\n\n        this.input.addEventListener('paste', function () {\n\n            _this.inputPasteCallback();\n\n        }, false);\n\n    },\n\n    inputPasteCallback : function () {\n\n        var e = this.input;\n\n        var _this = this;\n\n        window.setTimeout(function () {\n\n            _this.sendRequest(e.value);\n\n        }, 100);\n\n    },\n\n\n    sendRequest : function (url) {\n\n        codex.core.ajax({\n            type: 'get',\n            url: '/ajax/get_page',\n            data: { 'url' : url },\n            success: function (response) {\n\n                var title, content, sourceLink;\n\n                if ( response.success == 1) {\n\n                    title = document.getElementById('page_form_title');\n                    content = document.getElementById('page_form_content');\n                    sourceLink = document.getElementById('source_link');\n\n                    title.value = response.title;\n                    content.value = response.article;\n                    sourceLink.value = url;\n\n                    // while we have no own editor, we should use this getting element\n                    // cause I can't edit code for external editor\n                    document.getElementsByClassName('redactor_redactor')[0].innerHTML = response.article;\n\n                } else {\n\n                    codex.core.showException('Не удалось импортировать страницу');\n\n                }\n\n            }\n\n        });\n\n    }\n};\n\nmodule.exports = parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/parser.js\n// module id = 8\n// module chunks = 0","/**\n * Comments module\n * @author  @guryn @neSpecc\n * @copyright CodeX Team https://github.com/codex-team\n * @version 1.1.0\n */\nmodule.exports = (function () {\n\n    var commentsList = null,\n        anchor       = document.location.hash;\n\n    var CSS_ = {\n        replyForm :         'comments-form',\n        replyTextarea :     'comment-form__text',\n        replyOpened :       'comment-form__placeholder--opened',\n        replySubmitButton : 'comment-form__button',\n        highlighted :       'comment--highligthed'\n    };\n\n    /**\n     * Initialize comments\n     * @param {object} data        params\n     * @param {sring} data.listId  comments list wrapper id\n     */\n    function init(data) {\n\n        commentsList = document.getElementById(data.listId);\n\n        if (anchor) {\n\n            highligthAnchor();\n\n        }\n\n    }\n\n    /**\n     * Remove holder and append form for comment\n     * @param {Element} placeholder 'Write reply...' button\n     */\n    function reply( replyButton ) {\n\n        /** If reply already opened, do noting */\n        if ( replyButton.classList.contains( CSS_.replyOpened ) ) {\n\n            return;\n\n        }\n\n        /** Get reply params from dataset */\n        var replyParams = {\n            parentId : replyButton.dataset.parentId,\n            rootId   : replyButton.dataset.rootId,\n            action   : replyButton.dataset.action\n        };\n\n        /** Create reply form */\n        var form = createForm( replyParams );\n\n        /** Insert form after reply button */\n        codex.core.insertAfter( replyButton, form );\n\n        replyButton.classList.add( CSS_.replyOpened );\n        getFormTextarea(form).focus();\n\n    }\n\n    /**\n     * Returns reply form\n     *\n     * @param {object} params\n     * @param {Number} params.parentId     parent comment's id\n     * @param {Number} params.rootId       root comment's id\n     * @param {String} params.action       URL for saving\n     *\n     * @return {Element} element that holds textarea and submit-button\n     */\n    function createForm( params ) {\n\n        var textarea     = createTextarea(),\n            button       = createButton(),\n            form         = document.createElement('DIV');\n\n        form.classList.add(CSS_.replyForm);\n\n        /** Store data in Textarea */\n        textarea.dataset.parentId = params.parentId;\n        textarea.dataset.rootId   = params.rootId;\n        textarea.dataset.action   = params.action;\n\n        form.appendChild(textarea);\n        form.appendChild(button);\n\n        return form;\n\n    }\n\n    /** Return textarea for form for comment */\n    function createTextarea() {\n\n        var textarea = document.createElement('TEXTAREA');\n\n        textarea.classList.add(CSS_.replyTextarea);\n        textarea.placeholder = 'Ваш комментарий';\n\n        textarea.addEventListener('keydown', keydownSubmitHandler, false);\n        textarea.addEventListener('blur', blurTextareaHandler, false);\n\n        codex.autoresizeTextarea.addListener(textarea);\n\n        return textarea;\n\n    }\n\n    /** Return submit button for form*/\n    function createButton() {\n\n        var button = document.createElement('DIV');\n\n        button.classList.add( CSS_.replySubmitButton, 'button', 'master');\n        button.textContent = 'Отправить';\n\n        button.addEventListener('click', submitClicked_, false);\n\n        return button;\n\n    }\n\n    /**\n     * Reply submit button click handler\n     */\n    function submitClicked_() {\n\n        var submit = this,\n            form   = submit.parentNode,\n            textarea = getFormTextarea(form);\n\n        send_( textarea );\n\n    }\n\n    /* Return textarea for given form */\n    function getFormTextarea(form) {\n\n        return form.getElementsByTagName('TEXTAREA')[0];\n\n    }\n\n    /**\n     * Remove form on textarea blur\n     * @param {Event} blur Event\n     */\n    function blurTextareaHandler( event ) {\n\n        var textarea  = event.target,\n            form      = textarea.parentNode,\n            commentId = textarea.dataset.parentId;\n\n        if (!textarea.value.trim()) {\n\n            removeForm(form, commentId);\n\n        }\n\n    }\n\n    /**\n     * Removes reply form\n     * @param {Element} form\n     * @param {Number} commentId   reply target comment id\n     */\n    function removeForm( form, commentId ) {\n\n        var replyButton = document.getElementById('reply' + commentId );\n\n        form.remove();\n        replyButton.classList.remove(CSS_.replyOpened);\n\n    }\n\n    /**\n     * Catch Ctrl+Enter or Cmd+Enter for send form\n     * @param {Event} event    Keydown Event\n     */\n    function keydownSubmitHandler(event) {\n\n        var ctrlPressed  = event.ctrlKey || event.metaKey,\n            enterPressed = event.keyCode == 13,\n            textarea = event.target;\n\n        if ( ctrlPressed && enterPressed ) {\n\n            send_( textarea );\n\n            event.preventDefault();\n\n        }\n\n    }\n\n    /**\n     * Ajax function for submit comment\n     * @param {Element} textarea    input with dataset and text\n     */\n    function send_( textarea ) {\n\n        var formData  = new FormData(),\n            form      = textarea.parentNode,\n            submitBtn = form.querySelector('.' + CSS_.replySubmitButton),\n            rootId    = textarea.dataset.rootId,\n            parentId  = textarea.dataset.parentId,\n            actionURL = textarea.dataset.action;\n\n        formData.append('root_id', rootId);\n        formData.append('parent_id', parentId);\n        formData.append('comment_text', textarea.value);\n        formData.append('csrf', window.csrf);\n\n        codex.ajax.call({\n            type: 'POST',\n            url: actionURL,\n            data: formData,\n            beforeSend : function () {\n\n                submitBtn.classList.add('loading');\n\n            },\n            success : function (response) {\n\n                var comment,\n                    emptyCommentsBlock;\n\n                submitBtn.classList.remove('loading');\n\n                response = JSON.parse(response);\n\n                if (response.success) {\n\n                    /** Remove form and return placeholder */\n                    removeForm(form, parentId);\n\n                    emptyCommentsBlock = document.querySelector('.js-empty-comments');\n\n                    if (emptyCommentsBlock) {\n\n                        emptyCommentsBlock.remove();\n\n                    }\n\n                    comment = codex.core.parseHTML(response.comment)[0];\n                    commentsList.appendChild(comment);\n\n                    // Scroll down to new comment\n                    window.scrollTo(0, document.body.scrollHeight);\n\n                    // Highligth new comment\n                    highligthComment(response.commentId);\n\n\n                } else {\n\n                    codex.alerts.show(response.error);\n\n                }\n\n            }\n\n        });\n\n    }\n\n    /**\n     * Highligth comment by id for a time\n     * @param {Number} commentId   id comment to highlight\n     */\n    function highligthComment(commentId) {\n\n        var comment = document.getElementById('comment' + commentId);\n\n        comment.classList.add(CSS_.highlighted);\n\n        window.setTimeout(function () {\n\n            comment.classList.remove(CSS_.highlighted);\n\n        }, 500);\n\n    }\n\n    /** Highligth comment if anchor is in url */\n    function highligthAnchor() {\n\n        var numbers = anchor.match(/\\d+/),\n            commentId;\n\n        if (!numbers) return;\n\n        commentId = numbers[0];\n\n        highligthComment(commentId);\n\n    }\n\n    return {\n        init : init,\n        reply : reply\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/comments.js\n// module id = 9\n// module chunks = 0","/**\n* Notifications tips module\n*/\nmodule.exports = (function () {\n\n    require('../../css/modules/alerts.css');\n\n    var CSS_ = {\n        wrapper : 'exceptionWrapper',\n        exception : 'clientException'\n    };\n\n    var wrapper_ = null;\n\n    function prepare_() {\n\n        if ( wrapper_ ) {\n\n            return true;\n\n        }\n\n        wrapper_ = document.createElement('DIV');\n        wrapper_.classList.add(CSS_.wrapper);\n\n        document.body.appendChild(wrapper_);\n\n    }\n\n    /**\n    * @param {String} message - may content HTML\n    */\n    function show(message) {\n\n        prepare_();\n\n        var notify = document.createElement('DIV');\n\n        notify.classList.add(CSS_.exception);\n        notify.innerHTML = message;\n\n        wrapper_.appendChild(notify);\n\n        notify.classList.add('bounceIn');\n\n        window.setTimeout(function () {\n\n            notify.remove();\n\n        }, 8000);\n\n    }\n\n    return {\n        show : show\n    };\n\n})({});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/alerts.js\n// module id = 10\n// module chunks = 0","/**\n* Module for comments textarea autoresize\n*/\nmodule.exports = (function () {\n\n    /**\n    * Textareas initialization\n    */\n    var init = function () {\n\n        var textareas = document.getElementsByClassName('js-autoresizable');\n\n        if (textareas.length) {\n\n            for (var i = 0; i < textareas.length; i++) {\n\n                addListener(textareas[i]);\n\n            }\n\n        }\n\n    };\n\n    /**\n    * Add input event listener to textarea\n    *\n    * @param {Element} textarea — node which need to be able to autoresize\n    */\n    var addListener = function (textarea) {\n\n        textarea.addEventListener('input', textareaChanged, false);\n\n    };\n\n    /**\n    * Hanging events on textareas\n    */\n    var textareaChanged = function (event) {\n\n        var textarea = event.target;\n\n        checkScrollHeight(textarea);\n\n    };\n\n    /**\n    * Increasing textarea height\n    */\n    var checkScrollHeight = function (textarea) {\n\n        if (textarea.scrollHeight > textarea.clientHeight) {\n\n            textarea.style.height = textarea.scrollHeight + 'px';\n\n        }\n\n    };\n\n    return {\n        init: init,\n        addListener : addListener\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/autoresizeTextarea.js\n// module id = 12\n// module chunks = 0","module.exports = function () {\n\n    var init = function () {\n\n        bindEvents();\n\n    };\n\n    var bindEvents = function () {\n\n        var repeatConfirmEmailBtn = document.getElementById('repeat-email-confirmation');\n\n        repeatConfirmEmailBtn.addEventListener('click', sendEmeailConfirmation);\n\n    };\n\n    var sendEmeailConfirmation = function (e) {\n\n        var success = function (response) {\n\n            response = JSON.parse(response);\n\n            codex.alerts.show(response.message);\n            e.target.classList.remove('loading');\n\n        };\n\n        e.target.classList.add('loading');\n\n        codex.ajax.call({\n            url: '/ajax/confirmation-email',\n            success: success\n        });\n\n    };\n\n    return {\n        init: init\n    };\n\n}();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/profileSettings.js\n// module id = 13\n// module chunks = 0","var sharer = {\n\n    init : function () {\n\n        var shareButtons = document.querySelectorAll('.js-share');\n\n        for (var i = shareButtons.length - 1; i >= 0; i--) {\n\n            shareButtons[i].addEventListener('click', sharer.click, true);\n\n        }\n\n    },\n\n    shareVk : function (data) {\n\n        var link  = 'https://vk.com/share.php?';\n\n        link += 'url='          + data.url;\n        link += '&title='       + data.title;\n        link += '&description=' + data.desc;\n        link += '&image='       + data.img;\n        link += '&noparse=true';\n\n        this.popup( link, 'vkontakte'  );\n\n    },\n\n    shareFacebook : function (data) {\n\n        var FB_APP_ID = 1740455756240878,\n            link      = 'https://www.facebook.com/dialog/share?display=popup';\n\n        link += '&app_id='       + FB_APP_ID;\n        link += '&href='         + data.url;\n        link += '&redirect_uri=' + document.location.href;\n\n        this.popup( link, 'facebook' );\n\n    },\n\n    shareTwitter : function (data) {\n\n        var link = 'https://twitter.com/share?';\n\n        link += 'text='      + data.title;\n        link += '&url='      + data.url;\n        link += '&counturl=' + data.url;\n\n        this.popup( link, 'twitter' );\n\n    },\n\n    shareTelegram : function (data) {\n\n        var link  = 'https://telegram.me/share/url';\n\n        link += '?text=' + data.title;\n        link += '&url='  + data.url;\n\n        this.popup( link, 'telegram' );\n\n    },\n\n    popup : function ( url, socialType ) {\n\n        window.open( url, '', 'toolbar=0,status=0,width=626,height=436' );\n\n        /**\n         * Write analytics goal\n         */\n        if ( window.yaCounter32652805 ) {\n\n            window.yaCounter32652805.reachGoal('article-share', function () {}, this, {type: socialType, url: url});\n\n        }\n\n    },\n\n    click : function (event) {\n\n        var target = event.target;\n\n        /**\n         * Social provider stores in data 'shareType' attribute on share-button\n         * But click may be fired on child-element in button, so we need to handle it.\n         */\n        var type = target.dataset.shareType || target.parentNode.dataset.shareType;\n\n        if (!sharer[type]) return;\n\n        /**\n         * Sanitize share params\n         * @todo test for taint strings\n         */\n            // for (key in window.shareData){\n            //      window.shareData[key] = encodeURIComponent(window.shareData[key]);\n            // }\n\n        var shareData = {\n\n            url:    target.dataset.url || target.parentNode.dataset.url,\n            title:  target.dataset.title || target.parentNode.dataset.title,\n            desc:   target.dataset.desc || target.parentNode.dataset.desc,\n            img:    target.dataset.img || target.parentNode.dataset.title\n\n        };\n\n        /**\n         * Fire click handler\n         */\n\n        sharer[type](shareData);\n\n    }\n\n};\n\nmodule.exports = sharer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/sharer.js\n// module id = 14\n// module chunks = 0"],"sourceRoot":""}