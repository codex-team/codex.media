{"version":3,"sources":["webpack:///public/build/bundle.js","webpack:///webpack/bootstrap 5bb9e002331b7ae5a0ae","webpack:///./public/app/js/main.js","webpack:///./public/app/js/modules/core.js","webpack:///./public/app/js/modules/ajax.js","webpack:///./public/app/js/modules/transport.js","webpack:///./public/app/js/modules/content.js","webpack:///./public/app/js/modules/appender.js","webpack:///./public/app/js/modules/parser.js","webpack:///./public/app/js/modules/comments.js","webpack:///./public/app/js/modules/alerts.js","webpack:///./public/app/js/modules/autoresizeTextarea.js","webpack:///./public/app/js/modules/profileSettings.js","webpack:///./public/app/js/modules/sharer.js","webpack:///./public/app/js/modules/writing.js","webpack:///./public/app/js/modules/loader.js"],"names":["codex","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","nodes","content","init","customCheckboxes","approvalButtons","autoresizeTextarea","window","codexSpecial","blockId","core","log","docReady","f","test","document","readyState","setTimeout","ajax","transport","appender","parser","comments","alerts","profileSettings","sharer","writing","loader","str","prefix","type","arg","staticLength","length","substr","console","e","getOffset","elem","docElem","win","rect","doc","getClientRects","getBoundingClientRect","width","height","ownerDocument","documentElement","top","pageYOffset","clientTop","left","pageXOffset","clientLeft","isElementOnScreen","el","elPositon","screenBottom","scrollY","innerHeight","css","getComputedStyle","insertAfter","target","element","parentNode","insertBefore","nextSibling","replace","nodeToReplace","replaceWith","replaceChild","random","min","max","Math","floor","delegateEvent","targetSelector","eventName","callback","addEventListener","event","matched","matches","parentElement","nodeTypes","TAG","TEXT","COMMENT","DOCUMENT_FRAGMENT","keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","LEFT","UP","DOWN","RIGHT","DELETE","META","isDomNode","nodeType","this","parseHTML","inputString","contentHolder","childs","parsedNodes","createElement","innerHTML","trim","childNodes","node","i","textContent","push","isEmpty","obj","Object","isVisible","offsetParent","setCookie","name","value","expires","path","domain","toGMTString","cookie","getCookie","dc","begin","indexOf","end","unescape","substring","isFormData","object","append","data","url","XMLHTTP","XMLHttpRequest","ActiveXObject","successFunction","async","success","withCredentials","beforeSend","open","setRequestHeader","onreadystatechange","status","responseText","send","config_","input","configuration","inputElement","multiple","setAttribute","accept","send_","clickInput_","click","error","formData","FormData","files","toggleMobileMenu","menu","getElementById","openedClass","classList","toggle","stopPropagation","stopImmediatePropagation","preventDefault","CHECKED_CLASS","checkboxes","getElementsByClassName","clicked","checkbox","querySelector","isChecked","contains","removeAttribute","CLICKED_CLASS","buttons","button","isClicked","add","page","settings","blockForItems","loadMoreButton","buttonText","buttonId","targetBlockId","currentPage","autoLoading","isAllowed","load","requestUrl","parseInt","response","JSON","parse","pages","canLoad","next_page","disable","showException","remove","style","display","isLaunched","scrollEvent","removeEventListener","scrollReachedEnd","body","clientHeight","_this","inputPasteCallback","sendRequest","title","sourceLink","article","commentsList","listId","anchor","highligthAnchor","reply","replyButton","CSS_","replyOpened","replyParams","parentId","dataset","rootId","action","form","createForm","getFormTextarea","focus","params","textarea","createTextarea","createButton","replyForm","appendChild","replyTextarea","placeholder","keydownSubmitHandler","blurTextareaHandler","addListener","replySubmitButton","submitClicked_","submit","getElementsByTagName","commentId","removeForm","ctrlPressed","ctrlKey","metaKey","enterPressed","keyCode","submitBtn","actionURL","csrf","comment","emptyCommentsBlock","scrollTo","scrollHeight","highligthComment","show","highlighted","numbers","match","location","hash","prepare_","wrapper_","wrapper","message","notify","exception","textareas","textareaChanged","checkScrollHeight","bindEvents","repeatConfirmEmailBtn","sendEmeailConfirmation","shareButtons","querySelectorAll","shareVk","link","desc","img","popup","shareFacebook","FB_APP_ID","href","shareTwitter","shareTelegram","socialType","yaCounter32652805","reachGoal","shareType","shareData","_editorIsReady","_settings","hideEditorToolbar","textareaId","Date","now","titleId","initialBlockPlugin","items","plugins","targetId","pageId","prepare","_mergeSettings","loadEditorResources","then","Promise","resolve","key","_appendTextareasToTarget","textareaHtml","textareaContent","_createElem","hidden","tag","classes","param","_startEditor","editor","start","hideToolbar","tools","paragraph","iconClassname","render","validate","save","allowedToPaste","showInlineToolbar","destroy","allowRenderOnPaste","header","appendCallback","makeSettings","displayInToolbox","targetClicked","formId","hidePlaceholderClass","holder","onclick","editorResources","_version","loadListPromises","map","_loadPlugin","_loadCore","all","scriptUrl","styleUrl","importScript","importStyle","plugin","submitForm","submitAtlasForm","atlasForm","forms","atlas","JSONinput","saver","saveBlocks","blocksCount","state","jsonOutput","stringify","openEditorFullscreen","openEditorFlagInput","prefixJS","prefixCSS","scriptPath","instanceName","reject","script","defer","onload","onerror","src","head","stylePath","rel"],"mappings":"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","file":"./public/build/bundle.js","sourcesContent":["var codex =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t* Require CSS build\n\t*/\n\t__webpack_require__(1);\n\t\n\t/**\n\t* Codex client\n\t* @author Savchenko Peter <specc.dev@gmail.com>\n\t*/\n\tcodex = (function (codex) {\n\t\n\t    'use strict';\n\t\n\t    /**\n\t    * Static nodes cache\n\t    */\n\t    codex.nodes = {\n\t        content : null\n\t    };\n\t\n\t    codex.init = function () {\n\t\n\t        /**\n\t        * Stylize custom checkboxes\n\t        */\n\t        codex.content.customCheckboxes.init();\n\t\n\t        /**\n\t        * Init approval buttons\n\t        */\n\t        codex.content.approvalButtons.init();\n\t\n\t        codex.autoresizeTextarea.init();\n\t\n\t        /**\n\t        * Init CodeX Special module for contrast version\n\t        * @see https://github.com/codex-team/codex.special\n\t        */\n\t        window.codexSpecial.init({\n\t            blockId : 'js-contrast-version-holder',\n\t        });\n\t\n\t        codex.core.log('Initialized', 'App init', 'info');\n\t\n\t    };\n\t\n\t    return codex;\n\t\n\t})({});\n\t\n\t/**\n\t* Document ready handler\n\t*/\n\tcodex.docReady = function (f) {\n\t\n\t    /in/.test(document.readyState) ? window.setTimeout(codex.docReady, 9, f) : f();\n\t\n\t};\n\t\n\t\n\t/**\n\t* Load modules\n\t*/\n\tcodex.core               = __webpack_require__(3);\n\tcodex.ajax               = __webpack_require__(4);\n\tcodex.transport          = __webpack_require__(5);\n\tcodex.content            = __webpack_require__(6);\n\tcodex.appender           = __webpack_require__(7);\n\tcodex.parser             = __webpack_require__(8);\n\tcodex.comments           = __webpack_require__(9);\n\tcodex.alerts             = __webpack_require__(10);\n\tcodex.autoresizeTextarea = __webpack_require__(12);\n\tcodex.profileSettings    = __webpack_require__(13);\n\tcodex.sharer             = __webpack_require__(14);\n\tcodex.writing            = __webpack_require__(15);\n\tcodex.loader             = __webpack_require__(16);\n\t\n\tmodule.exports = codex;\n\t\n\tcodex.docReady(function () {\n\t\n\t    codex.init();\n\t\n\t});\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Significant core methods\n\t*/\n\t\n\tmodule.exports = {\n\t\n\t    /** Logging method */\n\t    log : function (str, prefix, type, arg) {\n\t\n\t        var staticLength = 32;\n\t\n\t        if (prefix) {\n\t\n\t            prefix = prefix.length < staticLength ? prefix : prefix.substr( 0, staticLength - 2 );\n\t\n\t            while (prefix.length < staticLength - 1) {\n\t\n\t                prefix += ' ';\n\t\n\t            }\n\t\n\t            prefix += ':';\n\t            str = prefix + str;\n\t\n\t        }\n\t\n\t        type = type || 'log';\n\t\n\t        try {\n\t\n\t            if ('console' in window && window.console[ type ]) {\n\t\n\t                if (arg) console[type](str, arg);\n\t                else console[type](str);\n\t\n\t            }\n\t\n\t        } catch(e) {}\n\t\n\t    },\n\t\n\t    /**\n\t    * @return {object} dom element real offset\n\t    */\n\t    getOffset : function (elem) {\n\t\n\t        var docElem, win, rect, doc;\n\t\n\t        if (!elem) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        /**\n\t        * Support: IE <=11 only\n\t        * Running getBoundingClientRect on a\n\t        * disconnected node in IE throws an error\n\t        */\n\t        if (!elem.getClientRects().length) {\n\t\n\t            return {\n\t                top: 0,\n\t                left: 0\n\t            };\n\t\n\t        }\n\t\n\t        rect = elem.getBoundingClientRect();\n\t\n\t        /** Make sure element is not hidden (display: none) */\n\t        if (rect.width || rect.height) {\n\t\n\t            doc = elem.ownerDocument;\n\t            win = window;\n\t            docElem = doc.documentElement;\n\t\n\t            return {\n\t                top: rect.top + win.pageYOffset - docElem.clientTop,\n\t                left: rect.left + win.pageXOffset - docElem.clientLeft\n\t            };\n\t\n\t        }\n\t\n\t        /** Return zeros for disconnected and hidden elements (gh-2310) */\n\t        return rect;\n\t\n\t    },\n\t\n\t    /**\n\t    * Checks if element visible on screen at the moment\n\t    * @param {Element} - HTML NodeElement\n\t    */\n\t    isElementOnScreen : function (el) {\n\t\n\t        var elPositon    = codex.core.getOffset(el).top,\n\t            screenBottom = window.scrollY + window.innerHeight;\n\t\n\t        return screenBottom > elPositon;\n\t\n\t    },\n\t\n\t    /**\n\t    * Returns computed css styles for element\n\t    * @param {Element} el\n\t    */\n\t    css : function (el) {\n\t\n\t        return window.getComputedStyle(el);\n\t\n\t    },\n\t\n\t    /**\n\t    * Helper for inserting one element after another\n\t    */\n\t    insertAfter : function (target, element) {\n\t\n\t        target.parentNode.insertBefore(element, target.nextSibling);\n\t\n\t    },\n\t\n\t    /**\n\t    * Replaces node with\n\t    * @param {Element} nodeToReplace\n\t    * @param {Element} replaceWith\n\t    */\n\t    replace : function (nodeToReplace, replaceWith) {\n\t\n\t        return nodeToReplace.parentNode.replaceChild(replaceWith, nodeToReplace);\n\t\n\t    },\n\t\n\t    /**\n\t    * Helper for insert one element before another\n\t    */\n\t    insertBefore : function (target, element) {\n\t\n\t        target.parentNode.insertBefore(element, target);\n\t\n\t    },\n\t\n\t    /**\n\t    * Returns random {int} between numbers\n\t    */\n\t    random : function (min, max) {\n\t\n\t        return Math.floor(Math.random() * (max - min + 1)) + min;\n\t\n\t    },\n\t\n\t    /**\n\t    * Attach event to Element in parent\n\t    * @param {Element} parentNode    - Element that holds event\n\t    * @param {string} targetSelector - selector to filter target\n\t    * @param {string} eventName      - name of event\n\t    * @param {function} callback     - callback function\n\t    */\n\t    delegateEvent : function (parentNode, targetSelector, eventName, callback) {\n\t\n\t        parentNode.addEventListener(eventName, function (event) {\n\t\n\t            var el = event.target, matched;\n\t\n\t            while (el && !matched) {\n\t\n\t                matched = el.matches(targetSelector);\n\t\n\t                if (!matched) el = el.parentElement;\n\t\n\t            }\n\t\n\t            if (matched) {\n\t\n\t                callback.call(event.target, event, el);\n\t\n\t            }\n\t\n\t        }, true);\n\t\n\t    },\n\t\n\t\n\t    /**\n\t    * Readable DOM-node types map\n\t    */\n\t    nodeTypes : {\n\t        TAG     : 1,\n\t        TEXT    : 3,\n\t        COMMENT : 8,\n\t        DOCUMENT_FRAGMENT : 11\n\t    },\n\t\n\t    /**\n\t    * Readable keys map\n\t    */\n\t    keys : { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 },\n\t\n\t    /**\n\t    * @protected\n\t    * Check object for DOM node\n\t    */\n\t    isDomNode : function (el) {\n\t\n\t        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n\t\n\t    },\n\t\n\t    /**\n\t    * Parses string to nodeList\n\t    * Removes empty text nodes\n\t    * @param {string} inputString\n\t    * @return {array} of nodes\n\t    *\n\t    * Does not supports <tr> and <td> on firts level of inputString\n\t    */\n\t\n\t    parseHTML : function (inputString) {\n\t\n\t        // var templatesSupported = spark.supports.templates();\n\t\n\t        var contentHolder,\n\t            childs,\n\t            parsedNodes = [];\n\t\n\t        // if ( false &&   templatesSupported ) {\n\t\n\t        //     contentHolder = document.createElement('template');\n\t        //     contentHolder.innerHTML = inputString.trim();\n\t\n\t        //     console.log(\"contentHolder: %o\", contentHolder);\n\t\n\t        //     childs = contentHolder.content.cloneNode(true).childNodes;\n\t\n\t        // } else {\n\t\n\t        contentHolder = document.createElement('div');\n\t        contentHolder.innerHTML = inputString.trim();\n\t\n\t        childs = contentHolder.childNodes;\n\t\n\t        // }\n\t\n\t\n\t        /**\n\t        * Iterate childNodes and remove empty Text Nodes on first-level\n\t        */\n\t        for (var i = 0, node; !!(node = childs[i]); i++) {\n\t\n\t            if (node.nodeType == codex.core.nodeTypes.TEXT && !node.textContent.trim()) {\n\t\n\t                continue;\n\t\n\t            }\n\t\n\t            parsedNodes.push(node);\n\t\n\t        }\n\t\n\t        return parsedNodes;\n\t\n\t    },\n\t\n\t    /**\n\t    * Checks passed object for emptiness\n\t    * @require ES5 - Object.keys\n\t    * @param {object}\n\t    */\n\t    isEmpty : function (obj) {\n\t\n\t        return Object.keys(obj).length === 0;\n\t\n\t    },\n\t\n\t    /**\n\t    * Check for Element visibility\n\t    * @param {Element} el\n\t    */\n\t    isVisible : function (el) {\n\t\n\t        return el.offsetParent !== null;\n\t\n\t    },\n\t\n\t    setCookie : function (name, value, expires, path, domain) {\n\t\n\t        var str = name + '=' + value;\n\t\n\t        if (expires) str += '; expires=' + expires.toGMTString();\n\t        if (path)    str += '; path=' + path;\n\t        if (domain)  str += '; domain=' + domain;\n\t\n\t        document.cookie = str;\n\t\n\t    },\n\t\n\t    getCookie : function (name) {\n\t\n\t        var dc = document.cookie;\n\t\n\t        var prefix = name + '=',\n\t            begin = dc.indexOf('; ' + prefix);\n\t\n\t        if (begin == -1) {\n\t\n\t            begin = dc.indexOf(prefix);\n\t            if (begin !== 0) return null;\n\t\n\t        } else\n\t            begin += 2;\n\t\n\t        var end = document.cookie.indexOf(';', begin);\n\t\n\t        if (end == -1) end = dc.length;\n\t\n\t        return unescape(dc.substring(begin + prefix.length, end));\n\t\n\t    },\n\t\n\t};\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t* AJAX module\n\t*/\n\tvar ajax = (function () {\n\t\n\t    /**\n\t    * @usage codex.ajax.call();\n\t    */\n\t    var call = function (data) {\n\t\n\t        if (!data || !data.url) return;\n\t\n\t        var XMLHTTP          = window.XMLHttpRequest ? new window.XMLHttpRequest() : new window.ActiveXObject('Microsoft.XMLHTTP'),\n\t            successFunction  = function () {};\n\t\n\t        data.async           = true;\n\t        data.type            = data.type || 'GET';\n\t        data.data            = data.data || '';\n\t        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n\t        successFunction      = data.success || successFunction;\n\t\n\t        if (data.type == 'GET' && data.data) {\n\t\n\t            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\t\n\t        }\n\t\n\t        if (data.withCredentials) {\n\t\n\t            XMLHTTP.withCredentials = true;\n\t\n\t        }\n\t\n\t        if (data.beforeSend && typeof data.beforeSend == 'function') {\n\t\n\t            data.beforeSend.call();\n\t\n\t        }\n\t\n\t        XMLHTTP.open(data.type, data.url, data.async);\n\t\n\t        /**\n\t        * If we send FormData, we need no content-type header\n\t        */\n\t        if (!isFormData(data.data)) {\n\t\n\t            XMLHTTP.setRequestHeader('Content-type', data['content-type']);\n\t\n\t        }\n\t\n\t        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\t        XMLHTTP.onreadystatechange = function () {\n\t\n\t            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n\t\n\t                successFunction(XMLHTTP.responseText);\n\t\n\t            }\n\t\n\t        };\n\t\n\t        XMLHTTP.send(data.data);\n\t\n\t    };\n\t\n\t    /**\n\t     * Function for checking is it FormData object to send.\n\t     * @param {Object} object to check\n\t     * @return boolean\n\t     */\n\t    function isFormData(object) {\n\t\n\t        return typeof object.append === 'function';\n\t\n\t    };\n\t\n\t    return {\n\t\n\t        call : call\n\t\n\t    };\n\t\n\t}());\n\t\n\tmodule.exports = ajax;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * File transport module\n\t *\n\t * @module Transport module. Uploads file and returns some response from server\n\t * @copyright Codex-Team 2017\n\t *\n\t * @example\n\t *\n\t * Basic usage :\n\t *  codex.transport.init( {\n\t *      url : fetchURL,\n\t *      multiple : bool,\n\t *      accept : string  // http://htmlbook.ru/html/input/accept\n\t *      beforeSend : Function,\n\t *      success : Function,\n\t *      error : Function\n\t * });\n\t *\n\t * You can handle all of this event like:\n\t *  - what should happen before data sending with XMLHTTP\n\t *  - what should after success request\n\t *  - error handler\n\t */\n\t\n\tmodule.exports = ( function (transport) {\n\t\n\t    /** Empty configuration */\n\t    var config_ = null;\n\t\n\t    /** File holder */\n\t    transport.input = null;\n\t\n\t    /** initialize module */\n\t    transport.init = function (configuration) {\n\t\n\t        if (!configuration.url) {\n\t\n\t            codex.core.log('can\\'t send request because `url` is missed', 'Transport module', 'error');\n\t            return;\n\t\n\t        }\n\t\n\t        config_ = configuration;\n\t\n\t        var inputElement = document.createElement('INPUT');\n\t\n\t        inputElement.type = 'file';\n\t\n\t        if (config_ && config_.multiple) {\n\t\n\t            inputElement.setAttribute('multiple', 'multiple');\n\t\n\t        }\n\t\n\t        if (config_ && config_.accept) {\n\t\n\t            inputElement.setAttribute('accept', config_.accept);\n\t\n\t        }\n\t\n\t        inputElement.addEventListener('change', send_, false);\n\t\n\t        /** Save input */\n\t        transport.input = inputElement;\n\t\n\t        /** click input to show upload window */\n\t        clickInput_();\n\t\n\t    };\n\t\n\t    var clickInput_ = function () {\n\t\n\t        transport.input.click();\n\t\n\t    };\n\t\n\t    var send_ = function () {\n\t\n\t        var url        = config_.url,\n\t            beforeSend = config_.beforeSend,\n\t            success    = config_.success,\n\t            error      = config_.error,\n\t            formData   = new FormData(),\n\t            files      = transport.input.files;\n\t\n\t        for (var i = 0; i < files.length; i++) {\n\t\n\t            formData.append('files[]', files[i], files[i].name);\n\t\n\t        }\n\t\n\t        codex.ajax.call({\n\t            type : 'POST',\n\t            data : formData,\n\t            url : url,\n\t            beforeSend : beforeSend,\n\t            success : success,\n\t            error : error\n\t        });\n\t\n\t    };\n\t\n\t    return transport;\n\t\n\t})({});\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Operations with pages\n\t*/\n\tmodule.exports = (function () {\n\t\n\t    /**\n\t    * Toggles mobile menu\n\t    * Handles clicks on the hamburger icon in header\n\t    */\n\t    var toggleMobileMenu = function ( event ) {\n\t\n\t        var menu = document.getElementById('js-mobile-menu-holder'),\n\t            openedClass = 'mobile-menu-holder--opened';\n\t\n\t        menu.classList.toggle(openedClass);\n\t\n\t        event.stopPropagation();\n\t        event.stopImmediatePropagation();\n\t        event.preventDefault();\n\t\n\t    };\n\t\n\t    /**\n\t    * Module uses for toggle custom checkboxes\n\t    * that has 'js-custom-checkbox' class and input[type=\"checkbox\"] included\n\t    * Example:\n\t    * <span class=\"js-custom-checkbox\">\n\t    *    <input type=\"checkbox\" name=\"\" value=\"1\"/>\n\t    * </span>\n\t    */\n\t    var customCheckboxes = {\n\t\n\t        /**\n\t        * This class specifies checked custom-checkbox\n\t        * You may set it on serverisde\n\t        */\n\t        CHECKED_CLASS : 'checked',\n\t\n\t        init : function () {\n\t\n\t            var checkboxes = document.getElementsByClassName('js-custom-checkbox');\n\t\n\t            if (checkboxes.length) for (var i = checkboxes.length - 1; i >= 0; i--) {\n\t\n\t                checkboxes[i].addEventListener('click', codex.content.customCheckboxes.clicked, false);\n\t\n\t            }\n\t\n\t        },\n\t\n\t        clicked : function () {\n\t\n\t            var checkbox  = this,\n\t                input     = this.querySelector('input'),\n\t                isChecked = this.classList.contains(codex.content.customCheckboxes.CHECKED_CLASS);\n\t\n\t            checkbox.classList.toggle(codex.content.customCheckboxes.CHECKED_CLASS);\n\t\n\t            if (isChecked) {\n\t\n\t                input.removeAttribute('checked');\n\t\n\t            } else {\n\t\n\t                input.setAttribute('checked', 'checked');\n\t\n\t            }\n\t\n\t        }\n\t    };\n\t\n\t    var approvalButtons = {\n\t\n\t        CLICKED_CLASS : 'click-again-to-approve',\n\t\n\t        init : function () {\n\t\n\t            var buttons = document.getElementsByClassName('js-approval-button');\n\t\n\t            if (buttons.length) for (var i = buttons.length - 1; i >= 0; i--) {\n\t\n\t                buttons[i].addEventListener('click', codex.content.approvalButtons.clicked, false);\n\t\n\t            }\n\t\n\t        },\n\t\n\t        clicked : function (event) {\n\t\n\t            var button    = this,\n\t                isClicked = this.classList.contains(codex.content.approvalButtons.CLICKED_CLASS);\n\t\n\t            if (!isClicked) {\n\t\n\t                /* временное решение, пока нет всплывающего окна подверждения важных действий */\n\t                button.classList.add(codex.content.approvalButtons.CLICKED_CLASS);\n\t\n\t                event.preventDefault();\n\t\n\t            }\n\t\n\t        }\n\t    };\n\t\n\t    return {\n\t\n\t        toggleMobileMenu : toggleMobileMenu,\n\t        customCheckboxes : customCheckboxes,\n\t        approvalButtons : approvalButtons\n\t\n\t    };\n\t\n\t}());\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Appender is being used for ajax-loading next pages of lists\n\t *\n\t *    codex.appender.init({\n\t *        buttonId      : 'buttonLoadNews',       // button for listening\n\t *        currentPage   : '<?= $page_number ?>',    // currentPage number\n\t *        url           : '/',                      // url for ajax-requests\n\t *        targetBlockId : 'list_of_news',           // target for appending\n\t *        autoLoading   : true,                     // allow loading when reach bottom while scrolling\n\t *    });\n\t */\n\t\n\tvar appender = {\n\t\n\t    /* Pagination. Here is a number of current page */\n\t    page : 1,\n\t\n\t    settings : null,\n\t\n\t    blockForItems : null,\n\t\n\t    loadMoreButton : null,\n\t\n\t    /**\n\t     * Button's text for saving it.\n\t     * On its place dots will be while news are loading\n\t     */\n\t    buttonText : null,\n\t\n\t    init : function (settings) {\n\t\n\t        this.settings = settings;\n\t\n\t        /* Checking for existing button and field for loaded info */\n\t        this.loadMoreButton = document.getElementById(this.settings.buttonId);\n\t\n\t        if (!this.loadMoreButton) return false;\n\t\n\t        this.blockForItems = document.getElementById(this.settings.targetBlockId);\n\t\n\t        if (!this.blockForItems) return false;\n\t\n\t        this.page       = settings.currentPage;\n\t        this.buttonText = this.loadMoreButton.innerHTML;\n\t\n\t        if (this.settings.autoLoading) this.autoLoading.isAllowed = true;\n\t\n\t        this.loadMoreButton.addEventListener('click', function (event) {\n\t\n\t            codex.appender.load();\n\t\n\t            event.preventDefault();\n\t\n\t            codex.appender.autoLoading.init();\n\t\n\t        }, false);\n\t\n\t    },\n\t\n\t    load : function () {\n\t\n\t        var requestUrl = this.settings.url + (parseInt(this.page) + 1);\n\t            // separator   = '<a href=\"' + requestUrl + '\"><div class=\"article post-list-item w_island separator\">Page ' + (parseInt(this.page) + 1) + '</div></a>';\n\t\n\t        codex.ajax.call({\n\t            type: 'post',\n\t            url: requestUrl,\n\t            data: {},\n\t            beforeSend : function () {\n\t\n\t                codex.appender.loadMoreButton.classList.add('loading');\n\t\n\t            },\n\t            success : function (response) {\n\t\n\t                response = JSON.parse(response);\n\t\n\t                if (response.success) {\n\t\n\t                    if (!response.pages) return;\n\t\n\t                    /* Append items */\n\t                    // codex.appender.blockForItems.innerHTML += separator;\n\t                    codex.appender.blockForItems.innerHTML += response.pages;\n\t\n\t                    /* Next page */\n\t                    codex.appender.page++;\n\t\n\t                    if (codex.appender.settings.autoLoading) {\n\t\n\t                        /* Removing restriction for auto loading */\n\t                        codex.appender.autoLoading.canLoad = true;\n\t\n\t                    }\n\t\n\t                    /* Checking for next page's existing. If no — hide the button for loading news and remove listener */\n\t                    if (!response.next_page) codex.appender.disable();\n\t\n\t                } else {\n\t\n\t                    codex.core.showException('Не удалось подгрузить новости');\n\t\n\t                }\n\t\n\t                codex.appender.loadMoreButton.classList.remove('loading');\n\t\n\t            }\n\t\n\t        });\n\t\n\t    },\n\t\n\t    disable : function () {\n\t\n\t        codex.appender.loadMoreButton.style.display = 'none';\n\t\n\t        if (codex.appender.autoLoading.isLaunched) {\n\t\n\t            codex.appender.autoLoading.disable();\n\t\n\t        }\n\t\n\t    },\n\t\n\t    autoLoading : {\n\t\n\t        isAllowed : false,\n\t\n\t        isLaunched : false,\n\t\n\t        /**\n\t         * Possibility to load news by scrolling.\n\t         * Restriction for reduction requests which could be while scrolling\n\t         */\n\t        canLoad : true,\n\t\n\t        init : function () {\n\t\n\t            if (!this.isAllowed) return;\n\t\n\t            window.addEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\t\n\t            codex.appender.autoLoading.isLaunched = true;\n\t\n\t        },\n\t\n\t        disable : function () {\n\t\n\t            window.removeEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\t\n\t            codex.appender.autoLoading.isLaunched = false;\n\t\n\t        },\n\t\n\t        scrollEvent : function () {\n\t\n\t            var scrollReachedEnd = window.pageYOffset + window.innerHeight >= document.body.clientHeight;\n\t\n\t            if (scrollReachedEnd && codex.appender.autoLoading.canLoad) {\n\t\n\t                codex.appender.autoLoading.canLoad = false;\n\t\n\t                codex.appender.load();\n\t\n\t            }\n\t\n\t        },\n\t\n\t    }\n\t\n\t};\n\t\n\tmodule.exports = appender;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Parser module\n\t * @author Taly Guryn\n\t */\n\tvar parser = {\n\t\n\t    input : null,\n\t\n\t    init : function () {\n\t\n\t        // this.input = document.getElementById(settings.input_id);\n\t\n\t        var _this = this;\n\t\n\t        this.input.addEventListener('paste', function () {\n\t\n\t            _this.inputPasteCallback();\n\t\n\t        }, false);\n\t\n\t    },\n\t\n\t    inputPasteCallback : function () {\n\t\n\t        var e = this.input;\n\t\n\t        var _this = this;\n\t\n\t        window.setTimeout(function () {\n\t\n\t            _this.sendRequest(e.value);\n\t\n\t        }, 100);\n\t\n\t    },\n\t\n\t\n\t    sendRequest : function (url) {\n\t\n\t        codex.core.ajax({\n\t            type: 'get',\n\t            url: '/ajax/get_page',\n\t            data: { 'url' : url },\n\t            success: function (response) {\n\t\n\t                var title, content, sourceLink;\n\t\n\t                if ( response.success == 1) {\n\t\n\t                    title = document.getElementById('page_form_title');\n\t                    content = document.getElementById('page_form_content');\n\t                    sourceLink = document.getElementById('source_link');\n\t\n\t                    title.value = response.title;\n\t                    content.value = response.article;\n\t                    sourceLink.value = url;\n\t\n\t                    // while we have no own editor, we should use this getting element\n\t                    // cause I can't edit code for external editor\n\t                    document.getElementsByClassName('redactor_redactor')[0].innerHTML = response.article;\n\t\n\t                } else {\n\t\n\t                    codex.core.showException('Не удалось импортировать страницу');\n\t\n\t                }\n\t\n\t            }\n\t\n\t        });\n\t\n\t    }\n\t};\n\t\n\tmodule.exports = parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Comments module\n\t * @author  @guryn @neSpecc\n\t * @copyright CodeX Team https://github.com/codex-team\n\t * @version 1.1.0\n\t */\n\tmodule.exports = (function () {\n\t\n\t    var commentsList = null,\n\t        anchor       = document.location.hash;\n\t\n\t    var CSS_ = {\n\t        replyForm :         'comments-form',\n\t        replyTextarea :     'comment-form__text',\n\t        replyOpened :       'comment-form__placeholder--opened',\n\t        replySubmitButton : 'comment-form__button',\n\t        highlighted :       'comment--highligthed'\n\t    };\n\t\n\t    /**\n\t     * Initialize comments\n\t     * @param {object} data        params\n\t     * @param {sring} data.listId  comments list wrapper id\n\t     */\n\t    function init(data) {\n\t\n\t        commentsList = document.getElementById(data.listId);\n\t\n\t        if (anchor) {\n\t\n\t            highligthAnchor();\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Remove holder and append form for comment\n\t     * @param {Element} placeholder 'Write reply...' button\n\t     */\n\t    function reply( replyButton ) {\n\t\n\t        /** If reply already opened, do noting */\n\t        if ( replyButton.classList.contains( CSS_.replyOpened ) ) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        /** Get reply params from dataset */\n\t        var replyParams = {\n\t            parentId : replyButton.dataset.parentId,\n\t            rootId   : replyButton.dataset.rootId,\n\t            action   : replyButton.dataset.action\n\t        };\n\t\n\t        /** Create reply form */\n\t        var form = createForm( replyParams );\n\t\n\t        /** Insert form after reply button */\n\t        codex.core.insertAfter( replyButton, form );\n\t\n\t        replyButton.classList.add( CSS_.replyOpened );\n\t        getFormTextarea(form).focus();\n\t\n\t    }\n\t\n\t    /**\n\t     * Returns reply form\n\t     *\n\t     * @param {object} params\n\t     * @param {Number} params.parentId     parent comment's id\n\t     * @param {Number} params.rootId       root comment's id\n\t     * @param {String} params.action       URL for saving\n\t     *\n\t     * @return {Element} element that holds textarea and submit-button\n\t     */\n\t    function createForm( params ) {\n\t\n\t        var textarea     = createTextarea(),\n\t            button       = createButton(),\n\t            form         = document.createElement('DIV');\n\t\n\t        form.classList.add(CSS_.replyForm);\n\t\n\t        /** Store data in Textarea */\n\t        textarea.dataset.parentId = params.parentId;\n\t        textarea.dataset.rootId   = params.rootId;\n\t        textarea.dataset.action   = params.action;\n\t\n\t        form.appendChild(textarea);\n\t        form.appendChild(button);\n\t\n\t        return form;\n\t\n\t    }\n\t\n\t    /** Return textarea for form for comment */\n\t    function createTextarea() {\n\t\n\t        var textarea = document.createElement('TEXTAREA');\n\t\n\t        textarea.classList.add(CSS_.replyTextarea);\n\t        textarea.placeholder = 'Ваш комментарий';\n\t\n\t        textarea.addEventListener('keydown', keydownSubmitHandler, false);\n\t        textarea.addEventListener('blur', blurTextareaHandler, false);\n\t\n\t        codex.autoresizeTextarea.addListener(textarea);\n\t\n\t        return textarea;\n\t\n\t    }\n\t\n\t    /** Return submit button for form*/\n\t    function createButton() {\n\t\n\t        var button = document.createElement('DIV');\n\t\n\t        button.classList.add( CSS_.replySubmitButton, 'button', 'master');\n\t        button.textContent = 'Отправить';\n\t\n\t        button.addEventListener('click', submitClicked_, false);\n\t\n\t        return button;\n\t\n\t    }\n\t\n\t    /**\n\t     * Reply submit button click handler\n\t     */\n\t    function submitClicked_() {\n\t\n\t        var submit = this,\n\t            form   = submit.parentNode,\n\t            textarea = getFormTextarea(form);\n\t\n\t        send_( textarea );\n\t\n\t    }\n\t\n\t    /* Return textarea for given form */\n\t    function getFormTextarea(form) {\n\t\n\t        return form.getElementsByTagName('TEXTAREA')[0];\n\t\n\t    }\n\t\n\t    /**\n\t     * Remove form on textarea blur\n\t     * @param {Event} blur Event\n\t     */\n\t    function blurTextareaHandler( event ) {\n\t\n\t        var textarea  = event.target,\n\t            form      = textarea.parentNode,\n\t            commentId = textarea.dataset.parentId;\n\t\n\t        if (!textarea.value.trim()) {\n\t\n\t            removeForm(form, commentId);\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Removes reply form\n\t     * @param {Element} form\n\t     * @param {Number} commentId   reply target comment id\n\t     */\n\t    function removeForm( form, commentId ) {\n\t\n\t        var replyButton = document.getElementById('reply' + commentId );\n\t\n\t        form.remove();\n\t        replyButton.classList.remove(CSS_.replyOpened);\n\t\n\t    }\n\t\n\t    /**\n\t     * Catch Ctrl+Enter or Cmd+Enter for send form\n\t     * @param {Event} event    Keydown Event\n\t     */\n\t    function keydownSubmitHandler(event) {\n\t\n\t        var ctrlPressed  = event.ctrlKey || event.metaKey,\n\t            enterPressed = event.keyCode == 13,\n\t            textarea = event.target;\n\t\n\t        if ( ctrlPressed && enterPressed ) {\n\t\n\t            send_( textarea );\n\t\n\t            event.preventDefault();\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Ajax function for submit comment\n\t     * @param {Element} textarea    input with dataset and text\n\t     */\n\t    function send_( textarea ) {\n\t\n\t        var formData  = new FormData(),\n\t            form      = textarea.parentNode,\n\t            submitBtn = form.querySelector('.' + CSS_.replySubmitButton),\n\t            rootId    = textarea.dataset.rootId,\n\t            parentId  = textarea.dataset.parentId,\n\t            actionURL = textarea.dataset.action;\n\t\n\t        formData.append('root_id', rootId);\n\t        formData.append('parent_id', parentId);\n\t        formData.append('comment_text', textarea.value);\n\t        formData.append('csrf', window.csrf);\n\t\n\t        codex.ajax.call({\n\t            type: 'POST',\n\t            url: actionURL,\n\t            data: formData,\n\t            beforeSend : function () {\n\t\n\t                submitBtn.classList.add('loading');\n\t\n\t            },\n\t            success : function (response) {\n\t\n\t                var comment,\n\t                    emptyCommentsBlock;\n\t\n\t                submitBtn.classList.remove('loading');\n\t\n\t                response = JSON.parse(response);\n\t\n\t                if (response.success) {\n\t\n\t                    /** Remove form and return placeholder */\n\t                    removeForm(form, parentId);\n\t\n\t                    emptyCommentsBlock = document.querySelector('.js-empty-comments');\n\t\n\t                    if (emptyCommentsBlock) {\n\t\n\t                        emptyCommentsBlock.remove();\n\t\n\t                    }\n\t\n\t                    comment = codex.core.parseHTML(response.comment)[0];\n\t                    commentsList.appendChild(comment);\n\t\n\t                    // Scroll down to new comment\n\t                    window.scrollTo(0, document.body.scrollHeight);\n\t\n\t                    // Highligth new comment\n\t                    highligthComment(response.commentId);\n\t\n\t\n\t                } else {\n\t\n\t                    codex.alerts.show(response.error);\n\t\n\t                }\n\t\n\t            }\n\t\n\t        });\n\t\n\t    }\n\t\n\t    /**\n\t     * Highligth comment by id for a time\n\t     * @param {Number} commentId   id comment to highlight\n\t     */\n\t    function highligthComment(commentId) {\n\t\n\t        var comment = document.getElementById('comment' + commentId);\n\t\n\t        comment.classList.add(CSS_.highlighted);\n\t\n\t        window.setTimeout(function () {\n\t\n\t            comment.classList.remove(CSS_.highlighted);\n\t\n\t        }, 500);\n\t\n\t    }\n\t\n\t    /** Highligth comment if anchor is in url */\n\t    function highligthAnchor() {\n\t\n\t        var numbers = anchor.match(/\\d+/),\n\t            commentId;\n\t\n\t        if (!numbers) return;\n\t\n\t        commentId = numbers[0];\n\t\n\t        highligthComment(commentId);\n\t\n\t    }\n\t\n\t    return {\n\t        init : init,\n\t        reply : reply\n\t    };\n\t\n\t}());\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t* Notifications tips module\n\t*/\n\tmodule.exports = (function () {\n\t\n\t    __webpack_require__(11);\n\t\n\t    var CSS_ = {\n\t        wrapper : 'exceptionWrapper',\n\t        exception : 'clientException'\n\t    };\n\t\n\t    var wrapper_ = null;\n\t\n\t    function prepare_() {\n\t\n\t        if ( wrapper_ ) {\n\t\n\t            return true;\n\t\n\t        }\n\t\n\t        wrapper_ = document.createElement('DIV');\n\t        wrapper_.classList.add(CSS_.wrapper);\n\t\n\t        document.body.appendChild(wrapper_);\n\t\n\t    }\n\t\n\t    /**\n\t    * @param {String} message - may content HTML\n\t    */\n\t    function show(message) {\n\t\n\t        prepare_();\n\t\n\t        var notify = document.createElement('DIV');\n\t\n\t        notify.classList.add(CSS_.exception);\n\t        notify.innerHTML = message;\n\t\n\t        wrapper_.appendChild(notify);\n\t\n\t        notify.classList.add('bounceIn');\n\t\n\t        window.setTimeout(function () {\n\t\n\t            notify.remove();\n\t\n\t        }, 8000);\n\t\n\t    }\n\t\n\t    return {\n\t        show : show\n\t    };\n\t\n\t})({});\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Module for comments textarea autoresize\n\t*/\n\tmodule.exports = (function () {\n\t\n\t    /**\n\t    * Textareas initialization\n\t    */\n\t    var init = function () {\n\t\n\t        var textareas = document.getElementsByClassName('js-autoresizable');\n\t\n\t        if (textareas.length) {\n\t\n\t            for (var i = 0; i < textareas.length; i++) {\n\t\n\t                addListener(textareas[i]);\n\t\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t\n\t    /**\n\t    * Add input event listener to textarea\n\t    *\n\t    * @param {Element} textarea — node which need to be able to autoresize\n\t    */\n\t    var addListener = function (textarea) {\n\t\n\t        textarea.addEventListener('input', textareaChanged, false);\n\t\n\t    };\n\t\n\t    /**\n\t    * Hanging events on textareas\n\t    */\n\t    var textareaChanged = function (event) {\n\t\n\t        var textarea = event.target;\n\t\n\t        checkScrollHeight(textarea);\n\t\n\t    };\n\t\n\t    /**\n\t    * Increasing textarea height\n\t    */\n\t    var checkScrollHeight = function (textarea) {\n\t\n\t        if (textarea.scrollHeight > textarea.clientHeight) {\n\t\n\t            textarea.style.height = textarea.scrollHeight + 'px';\n\t\n\t        }\n\t\n\t    };\n\t\n\t    return {\n\t        init: init,\n\t        addListener : addListener\n\t    };\n\t\n\t}());\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function () {\n\t\n\t    var init = function () {\n\t\n\t        bindEvents();\n\t\n\t    };\n\t\n\t    var bindEvents = function () {\n\t\n\t        var repeatConfirmEmailBtn = document.getElementById('repeat-email-confirmation');\n\t\n\t        repeatConfirmEmailBtn.addEventListener('click', sendEmeailConfirmation);\n\t\n\t    };\n\t\n\t    var sendEmeailConfirmation = function (e) {\n\t\n\t        var success = function (response) {\n\t\n\t            response = JSON.parse(response);\n\t\n\t            codex.alerts.show(response.message);\n\t            e.target.classList.remove('loading');\n\t\n\t        };\n\t\n\t        e.target.classList.add('loading');\n\t\n\t        codex.ajax.call({\n\t            url: '/ajax/confirmation-email',\n\t            success: success\n\t        });\n\t\n\t    };\n\t\n\t    return {\n\t        init: init\n\t    };\n\t\n\t}();\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tvar sharer = {\n\t\n\t    init : function () {\n\t\n\t        var shareButtons = document.querySelectorAll('.js-share');\n\t\n\t        for (var i = shareButtons.length - 1; i >= 0; i--) {\n\t\n\t            shareButtons[i].addEventListener('click', sharer.click, true);\n\t\n\t        }\n\t\n\t    },\n\t\n\t    shareVk : function (data) {\n\t\n\t        var link  = 'https://vk.com/share.php?';\n\t\n\t        link += 'url='          + data.url;\n\t        link += '&title='       + data.title;\n\t        link += '&description=' + data.desc;\n\t        link += '&image='       + data.img;\n\t        link += '&noparse=true';\n\t\n\t        this.popup( link, 'vkontakte'  );\n\t\n\t    },\n\t\n\t    shareFacebook : function (data) {\n\t\n\t        var FB_APP_ID = 1740455756240878,\n\t            link      = 'https://www.facebook.com/dialog/share?display=popup';\n\t\n\t        link += '&app_id='       + FB_APP_ID;\n\t        link += '&href='         + data.url;\n\t        link += '&redirect_uri=' + document.location.href;\n\t\n\t        this.popup( link, 'facebook' );\n\t\n\t    },\n\t\n\t    shareTwitter : function (data) {\n\t\n\t        var link = 'https://twitter.com/share?';\n\t\n\t        link += 'text='      + data.title;\n\t        link += '&url='      + data.url;\n\t        link += '&counturl=' + data.url;\n\t\n\t        this.popup( link, 'twitter' );\n\t\n\t    },\n\t\n\t    shareTelegram : function (data) {\n\t\n\t        var link  = 'https://telegram.me/share/url';\n\t\n\t        link += '?text=' + data.title;\n\t        link += '&url='  + data.url;\n\t\n\t        this.popup( link, 'telegram' );\n\t\n\t    },\n\t\n\t    popup : function ( url, socialType ) {\n\t\n\t        window.open( url, '', 'toolbar=0,status=0,width=626,height=436' );\n\t\n\t        /**\n\t         * Write analytics goal\n\t         */\n\t        if ( window.yaCounter32652805 ) {\n\t\n\t            window.yaCounter32652805.reachGoal('article-share', function () {}, this, {type: socialType, url: url});\n\t\n\t        }\n\t\n\t    },\n\t\n\t    click : function (event) {\n\t\n\t        var target = event.target;\n\t\n\t        /**\n\t         * Social provider stores in data 'shareType' attribute on share-button\n\t         * But click may be fired on child-element in button, so we need to handle it.\n\t         */\n\t        var type = target.dataset.shareType || target.parentNode.dataset.shareType;\n\t\n\t        if (!sharer[type]) return;\n\t\n\t        /**\n\t         * Sanitize share params\n\t         * @todo test for taint strings\n\t         */\n\t            // for (key in window.shareData){\n\t            //      window.shareData[key] = encodeURIComponent(window.shareData[key]);\n\t            // }\n\t\n\t        var shareData = {\n\t\n\t            url:    target.dataset.url || target.parentNode.dataset.url,\n\t            title:  target.dataset.title || target.parentNode.dataset.title,\n\t            desc:   target.dataset.desc || target.parentNode.dataset.desc,\n\t            img:    target.dataset.img || target.parentNode.dataset.title\n\t\n\t        };\n\t\n\t        /**\n\t         * Fire click handler\n\t         */\n\t\n\t        sharer[type](shareData);\n\t\n\t    }\n\t\n\t};\n\t\n\tmodule.exports = sharer;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = (function () {\n\t\n\t    var writing = {\n\t\n\t        _editorIsReady : false,\n\t\n\t        _settings : {\n\t            hideEditorToolbar  : false,\n\t            textareaId         : 'codexEditor_time' + Date.now(),\n\t            titleId            : 'editorWritingTitle',\n\t            initialBlockPlugin : 'paragraph',\n\t            items              : [],\n\t            plugins : [\n\t                'paragraph',\n\t                'header',\n\t            ],\n\t\n\t            targetId : null,\n\t            pageId   : null,\n\t            parentId : null,\n\t        },\n\t\n\t        prepare : function (settings) {\n\t\n\t            writing._mergeSettings(settings);\n\t\n\t            return loadEditorResources(writing._settings.plugins)\n\t                .then(function () {\n\t\n\t                    writing._editorIsReady = true;\n\t                    return Promise.resolve();\n\t\n\t                });\n\t\n\t        },\n\t\n\t        /**\n\t         * Fill module's settings by settings from params\n\t         *\n\t         * @param  {Object} settings  list of params from init\n\t         */\n\t        _mergeSettings : function (settings) {\n\t\n\t            for (var key in settings) {\n\t\n\t                writing._settings[key] = settings[key];\n\t\n\t            }\n\t\n\t        },\n\t\n\t        // /**\n\t        //  * Function for create form or editor's target and load editor's sources\n\t        //  */\n\t        // init : function (targetClicked, formId, hidePlaceholderClass) {\n\t        //\n\t        //     /** 1. Create form or textarea for editor */\n\t        //     var target = document.getElementById(writing._settings.targetId);\n\t        //\n\t        //     writing._appendTextareasToTarget(target);\n\t        //\n\t        //     writing._startEditor();\n\t        //\n\t        // },\n\t\n\t        /**\n\t         * Append textareas for codex.editor\n\t         *\n\t         * @param  {Element} target\n\t         */\n\t        _appendTextareasToTarget : function (target) {\n\t\n\t            var textareaHtml, textareaContent;\n\t\n\t            textareaHtml = writing._createElem('TEXTAREA', {\n\t                name   : 'html',\n\t                id     : writing._settings.textareaId,\n\t                hidden : true,\n\t            }, []);\n\t\n\t            textareaContent = writing._createElem('TEXTAREA', {\n\t                name   : 'content',\n\t                id     : 'json_result',\n\t                hidden : true,\n\t            }, []);\n\t\n\t            target.appendChild(textareaHtml);\n\t            target.appendChild(textareaContent);\n\t\n\t        },\n\t\n\t        /**\n\t         * Create element and return it\n\t         *\n\t         * @param  {String} tag\n\t         * @param  {Object} params  pairs { key: value, ... }\n\t         * @param  {Array} classes  list of classes for new element\n\t         * @return {Element}\n\t         */\n\t        _createElem : function (tag, params, classes) {\n\t\n\t            var elem = document.createElement(tag);\n\t\n\t            for (var param in params) {\n\t\n\t                elem[param] = params[param];\n\t\n\t            }\n\t\n\t            for (var i in classes) {\n\t\n\t                elem.classList.add(classes[i]);\n\t\n\t            }\n\t\n\t            return elem;\n\t\n\t        },\n\t\n\t        /**\n\t         * Run editor\n\t         */\n\t        _startEditor : function () {\n\t\n\t            codex.editor.start({\n\t\n\t                textareaId:  writing._settings.textareaId,\n\t\n\t                initialBlockPlugin : writing._settings.initialBlockPlugin,\n\t\n\t                hideToolbar: writing._settings.hideEditorToolbar,\n\t\n\t                tools : {\n\t                    paragraph: {\n\t                        type: 'paragraph',\n\t                        iconClassname: 'ce-icon-paragraph',\n\t                        render: paragraph.render,\n\t                        validate: paragraph.validate,\n\t                        save: paragraph.save,\n\t                        allowedToPaste: true,\n\t                        showInlineToolbar: true,\n\t                        destroy: paragraph.destroy,\n\t                        allowRenderOnPaste: true\n\t                    },\n\t                    header: {\n\t                        type: 'header',\n\t                        iconClassname: 'ce-icon-header',\n\t                        appendCallback: header.appendCallback,\n\t                        makeSettings: header.makeSettings,\n\t                        render: header.render,\n\t                        validate: header.validate,\n\t                        save: header.save,\n\t                        destroy: header.destroy,\n\t                        displayInToolbox: true\n\t                    },\n\t                },\n\t\n\t                data : {\n\t                    items : writing._settings.items,\n\t                }\n\t            });\n\t\n\t            document.getElementById(writing._settings.titleId).focus();\n\t\n\t        },\n\t\n\t        init : function () {\n\t\n\t            if (!writing._editorIsReady) return;\n\t\n\t            /** 1. Create form or textarea for editor */\n\t            var target = document.getElementById(writing._settings.targetId);\n\t\n\t            writing._appendTextareasToTarget(target);\n\t            writing._startEditor();\n\t\n\t        },\n\t\n\t        /**\n\t         * Show form and hide placeholder\n\t         *\n\t         * @param  {Element} targetClicked       placeholder with wrapper\n\t         * @param  {String} formId               remove 'hide' from this form by id\n\t         * @param  {String} hidePlaceholderClass add this class to placeholder\n\t         */\n\t        open : function (targetClicked, formId, hidePlaceholderClass) {\n\t\n\t            if (!writing._editorIsReady) return;\n\t\n\t            var holder = targetClicked;\n\t\n\t            document.getElementById(formId).classList.remove('hide');\n\t            holder.classList.add(hidePlaceholderClass);\n\t            holder.onclick = null;\n\t\n\t            writing.init();\n\t\n\t        },\n\t\n\t    };\n\t\n\t    /**\n\t     * Load editor resources and append block with them to body\n\t     *\n\t     * @param  {Array}    plugins list of plugins to load\n\t     */\n\t    var loadEditorResources = (function () {\n\t\n\t        var editorResources = {\n\t\n\t            /**\n\t             * Editor's version\n\t             */\n\t            _version : '1.5',\n\t\n\t            /**\n\t             * Init function for load editor's resources\n\t             *\n\t             * @param  {Array} plugins list of plugins which should be loaded\n\t             */\n\t            load : function (plugins) {\n\t\n\t                var loadListPromises = plugins.map(editorResources._loadPlugin);\n\t\n\t                loadListPromises.push(editorResources._loadCore());\n\t\n\t                return Promise.all(loadListPromises);\n\t\n\t            },\n\t\n\t            _loadCore : function () {\n\t\n\t                var url = 'https://cdn.ifmo.su/editor/v' + editorResources._version + '/codex-editor',\n\t                    scriptUrl = url + '.js',\n\t                    styleUrl  = url + '.css';\n\t\n\t                return Promise.all([\n\t                    codex.loader.importScript(scriptUrl, 'editor-core'),\n\t                    codex.loader.importStyle(styleUrl, 'editor-core'),\n\t                ]);\n\t\n\t            },\n\t\n\t            _loadPlugin : function (plugin) {\n\t\n\t                var url = 'https://cdn.ifmo.su/editor/v' + editorResources._version + '/plugins/' + plugin + '/' + plugin,\n\t                    scriptUrl = url + '.js',\n\t                    styleUrl  = url + '.css';\n\t\n\t                return Promise.all([\n\t                    codex.loader.importScript(scriptUrl, plugin),\n\t                    codex.loader.importStyle(styleUrl, plugin)\n\t                ]);\n\t\n\t            },\n\t\n\t        };\n\t\n\t        return editorResources.load;\n\t\n\t    })();\n\t\n\t    var submitForm = (function () {\n\t\n\t        return {\n\t\n\t            /**\n\t            * Prepares and submit form\n\t            * Send attaches by json-encoded stirng with hidden input\n\t            */\n\t            submitAtlasForm : function () {\n\t\n\t                var atlasForm = document.forms.atlas;\n\t\n\t                if (!atlasForm) return;\n\t\n\t                /** CodeX.Editor */\n\t                var JSONinput = document.getElementById('json_result');\n\t\n\t                /**\n\t                 * Save blocks\n\t                 */\n\t                codex.editor.saver.saveBlocks();\n\t\n\t                window.setTimeout(function () {\n\t\n\t                    var blocksCount = codex.editor.state.jsonOutput.length;\n\t\n\t                    if (!blocksCount) {\n\t\n\t                        JSONinput.innerHTML = '';\n\t\n\t                    } else {\n\t\n\t                        JSONinput.innerHTML = JSON.stringify({ data: codex.editor.state.jsonOutput });\n\t\n\t                    }\n\t\n\t                    /**\n\t                     * Send form\n\t                     */\n\t                    atlasForm.submit();\n\t\n\t                }, 100);\n\t\n\t            },\n\t\n\t            /**\n\t            * Submits editor form for opening in full-screan page without saving\n\t            */\n\t            openEditorFullscreen : function () {\n\t\n\t                var atlasForm = document.forms.atlas,\n\t                    openEditorFlagInput = document.createElement('input');\n\t\n\t                openEditorFlagInput.type = 'hidden';\n\t                openEditorFlagInput.name = 'openFullScreen';\n\t                openEditorFlagInput.value = 1;\n\t\n\t                atlasForm.append(openEditorFlagInput);\n\t\n\t                this.submitAtlasForm();\n\t\n\t            },\n\t\n\t        };\n\t\n\t    })();\n\t\n\t    return {\n\t        init    : writing.init,\n\t        prepare : writing.prepare,\n\t        open    : writing.open,\n\t        openEditorFullscreen : submitForm.openEditorFullscreen,\n\t        submitAtlasForm      : submitForm.submitAtlasForm,\n\t    };\n\t\n\t})();\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\n\t    prefixJS : 'cdx-loader-js-',\n\t\n\t    prefixCSS : 'cdx-loader-css-',\n\t\n\t    importScript : function (scriptPath, instanceName) {\n\t\n\t        return new Promise(function (resolve, reject) {\n\t\n\t            var script;\n\t\n\t            /** Script is already loaded */\n\t            if ( !instanceName ) {\n\t\n\t                reject('Instance name is missed');\n\t\n\t            } else if ( document.getElementById(this.prefixJS + instanceName) ) {\n\t\n\t                resolve(scriptPath);\n\t\n\t            }\n\t\n\t            script = document.createElement('SCRIPT');\n\t            script.async = true;\n\t            script.defer = true;\n\t            script.id    = codex.loader.prefixJS + instanceName;\n\t\n\t            script.onload = function () {\n\t\n\t                resolve(scriptPath);\n\t\n\t            };\n\t\n\t            script.onerror = function () {\n\t\n\t                reject(scriptPath);\n\t\n\t            };\n\t\n\t            script.src = scriptPath;\n\t            document.head.appendChild(script);\n\t\n\t        });\n\t\n\t    },\n\t\n\t    importStyle : function (stylePath, instanceName) {\n\t\n\t        return new Promise(function (resolve, reject) {\n\t\n\t            var style;\n\t\n\t            /** Style is already loaded */\n\t            if ( !instanceName ) {\n\t\n\t                reject('Instance name is missed');\n\t\n\t            } else if ( document.getElementById(this.prefixCSS + instanceName) ) {\n\t\n\t                resolve(stylePath);\n\t\n\t            }\n\t\n\t            style = document.createElement('LINK');\n\t            style.type = 'text/css';\n\t            style.href = stylePath;\n\t            style.rel  = 'stylesheet';\n\t            style.id   = codex.loader.prefixCSS + instanceName;\n\t\n\t            style.onload = function () {\n\t\n\t                resolve(stylePath);\n\t\n\t            };\n\t\n\t            style.onerror = function () {\n\t\n\t                reject(stylePath);\n\t\n\t            };\n\t\n\t            style.src = stylePath;\n\t            document.head.appendChild(style);\n\t\n\t        });\n\t\n\t    },\n\t\n\t};\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// public/build/bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5bb9e002331b7ae5a0ae","/**\n* Require CSS build\n*/\nrequire('../css/main.css');\n\n/**\n* Codex client\n* @author Savchenko Peter <specc.dev@gmail.com>\n*/\ncodex = (function (codex) {\n\n    'use strict';\n\n    /**\n    * Static nodes cache\n    */\n    codex.nodes = {\n        content : null\n    };\n\n    codex.init = function () {\n\n        /**\n        * Stylize custom checkboxes\n        */\n        codex.content.customCheckboxes.init();\n\n        /**\n        * Init approval buttons\n        */\n        codex.content.approvalButtons.init();\n\n        codex.autoresizeTextarea.init();\n\n        /**\n        * Init CodeX Special module for contrast version\n        * @see https://github.com/codex-team/codex.special\n        */\n        window.codexSpecial.init({\n            blockId : 'js-contrast-version-holder',\n        });\n\n        codex.core.log('Initialized', 'App init', 'info');\n\n    };\n\n    return codex;\n\n})({});\n\n/**\n* Document ready handler\n*/\ncodex.docReady = function (f) {\n\n    /in/.test(document.readyState) ? window.setTimeout(codex.docReady, 9, f) : f();\n\n};\n\n\n/**\n* Load modules\n*/\ncodex.core               = require('./modules/core');\ncodex.ajax               = require('./modules/ajax');\ncodex.transport          = require('./modules/transport');\ncodex.content            = require('./modules/content');\ncodex.appender           = require('./modules/appender');\ncodex.parser             = require('./modules/parser');\ncodex.comments           = require('./modules/comments');\ncodex.alerts             = require('./modules/alerts');\ncodex.autoresizeTextarea = require('./modules/autoresizeTextarea');\ncodex.profileSettings    = require('./modules/profileSettings');\ncodex.sharer             = require('./modules/sharer');\ncodex.writing            = require('./modules/writing');\ncodex.loader             = require('./modules/loader');\n\nmodule.exports = codex;\n\ncodex.docReady(function () {\n\n    codex.init();\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/main.js\n// module id = 0\n// module chunks = 0","/**\n* Significant core methods\n*/\n\nmodule.exports = {\n\n    /** Logging method */\n    log : function (str, prefix, type, arg) {\n\n        var staticLength = 32;\n\n        if (prefix) {\n\n            prefix = prefix.length < staticLength ? prefix : prefix.substr( 0, staticLength - 2 );\n\n            while (prefix.length < staticLength - 1) {\n\n                prefix += ' ';\n\n            }\n\n            prefix += ':';\n            str = prefix + str;\n\n        }\n\n        type = type || 'log';\n\n        try {\n\n            if ('console' in window && window.console[ type ]) {\n\n                if (arg) console[type](str, arg);\n                else console[type](str);\n\n            }\n\n        } catch(e) {}\n\n    },\n\n    /**\n    * @return {object} dom element real offset\n    */\n    getOffset : function (elem) {\n\n        var docElem, win, rect, doc;\n\n        if (!elem) {\n\n            return;\n\n        }\n\n        /**\n        * Support: IE <=11 only\n        * Running getBoundingClientRect on a\n        * disconnected node in IE throws an error\n        */\n        if (!elem.getClientRects().length) {\n\n            return {\n                top: 0,\n                left: 0\n            };\n\n        }\n\n        rect = elem.getBoundingClientRect();\n\n        /** Make sure element is not hidden (display: none) */\n        if (rect.width || rect.height) {\n\n            doc = elem.ownerDocument;\n            win = window;\n            docElem = doc.documentElement;\n\n            return {\n                top: rect.top + win.pageYOffset - docElem.clientTop,\n                left: rect.left + win.pageXOffset - docElem.clientLeft\n            };\n\n        }\n\n        /** Return zeros for disconnected and hidden elements (gh-2310) */\n        return rect;\n\n    },\n\n    /**\n    * Checks if element visible on screen at the moment\n    * @param {Element} - HTML NodeElement\n    */\n    isElementOnScreen : function (el) {\n\n        var elPositon    = codex.core.getOffset(el).top,\n            screenBottom = window.scrollY + window.innerHeight;\n\n        return screenBottom > elPositon;\n\n    },\n\n    /**\n    * Returns computed css styles for element\n    * @param {Element} el\n    */\n    css : function (el) {\n\n        return window.getComputedStyle(el);\n\n    },\n\n    /**\n    * Helper for inserting one element after another\n    */\n    insertAfter : function (target, element) {\n\n        target.parentNode.insertBefore(element, target.nextSibling);\n\n    },\n\n    /**\n    * Replaces node with\n    * @param {Element} nodeToReplace\n    * @param {Element} replaceWith\n    */\n    replace : function (nodeToReplace, replaceWith) {\n\n        return nodeToReplace.parentNode.replaceChild(replaceWith, nodeToReplace);\n\n    },\n\n    /**\n    * Helper for insert one element before another\n    */\n    insertBefore : function (target, element) {\n\n        target.parentNode.insertBefore(element, target);\n\n    },\n\n    /**\n    * Returns random {int} between numbers\n    */\n    random : function (min, max) {\n\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n\n    },\n\n    /**\n    * Attach event to Element in parent\n    * @param {Element} parentNode    - Element that holds event\n    * @param {string} targetSelector - selector to filter target\n    * @param {string} eventName      - name of event\n    * @param {function} callback     - callback function\n    */\n    delegateEvent : function (parentNode, targetSelector, eventName, callback) {\n\n        parentNode.addEventListener(eventName, function (event) {\n\n            var el = event.target, matched;\n\n            while (el && !matched) {\n\n                matched = el.matches(targetSelector);\n\n                if (!matched) el = el.parentElement;\n\n            }\n\n            if (matched) {\n\n                callback.call(event.target, event, el);\n\n            }\n\n        }, true);\n\n    },\n\n\n    /**\n    * Readable DOM-node types map\n    */\n    nodeTypes : {\n        TAG     : 1,\n        TEXT    : 3,\n        COMMENT : 8,\n        DOCUMENT_FRAGMENT : 11\n    },\n\n    /**\n    * Readable keys map\n    */\n    keys : { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 },\n\n    /**\n    * @protected\n    * Check object for DOM node\n    */\n    isDomNode : function (el) {\n\n        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n\n    },\n\n    /**\n    * Parses string to nodeList\n    * Removes empty text nodes\n    * @param {string} inputString\n    * @return {array} of nodes\n    *\n    * Does not supports <tr> and <td> on firts level of inputString\n    */\n\n    parseHTML : function (inputString) {\n\n        // var templatesSupported = spark.supports.templates();\n\n        var contentHolder,\n            childs,\n            parsedNodes = [];\n\n        // if ( false &&   templatesSupported ) {\n\n        //     contentHolder = document.createElement('template');\n        //     contentHolder.innerHTML = inputString.trim();\n\n        //     console.log(\"contentHolder: %o\", contentHolder);\n\n        //     childs = contentHolder.content.cloneNode(true).childNodes;\n\n        // } else {\n\n        contentHolder = document.createElement('div');\n        contentHolder.innerHTML = inputString.trim();\n\n        childs = contentHolder.childNodes;\n\n        // }\n\n\n        /**\n        * Iterate childNodes and remove empty Text Nodes on first-level\n        */\n        for (var i = 0, node; !!(node = childs[i]); i++) {\n\n            if (node.nodeType == codex.core.nodeTypes.TEXT && !node.textContent.trim()) {\n\n                continue;\n\n            }\n\n            parsedNodes.push(node);\n\n        }\n\n        return parsedNodes;\n\n    },\n\n    /**\n    * Checks passed object for emptiness\n    * @require ES5 - Object.keys\n    * @param {object}\n    */\n    isEmpty : function (obj) {\n\n        return Object.keys(obj).length === 0;\n\n    },\n\n    /**\n    * Check for Element visibility\n    * @param {Element} el\n    */\n    isVisible : function (el) {\n\n        return el.offsetParent !== null;\n\n    },\n\n    setCookie : function (name, value, expires, path, domain) {\n\n        var str = name + '=' + value;\n\n        if (expires) str += '; expires=' + expires.toGMTString();\n        if (path)    str += '; path=' + path;\n        if (domain)  str += '; domain=' + domain;\n\n        document.cookie = str;\n\n    },\n\n    getCookie : function (name) {\n\n        var dc = document.cookie;\n\n        var prefix = name + '=',\n            begin = dc.indexOf('; ' + prefix);\n\n        if (begin == -1) {\n\n            begin = dc.indexOf(prefix);\n            if (begin !== 0) return null;\n\n        } else\n            begin += 2;\n\n        var end = document.cookie.indexOf(';', begin);\n\n        if (end == -1) end = dc.length;\n\n        return unescape(dc.substring(begin + prefix.length, end));\n\n    },\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/core.js\n// module id = 3\n// module chunks = 0","/**\n* AJAX module\n*/\nvar ajax = (function () {\n\n    /**\n    * @usage codex.ajax.call();\n    */\n    var call = function (data) {\n\n        if (!data || !data.url) return;\n\n        var XMLHTTP          = window.XMLHttpRequest ? new window.XMLHttpRequest() : new window.ActiveXObject('Microsoft.XMLHTTP'),\n            successFunction  = function () {};\n\n        data.async           = true;\n        data.type            = data.type || 'GET';\n        data.data            = data.data || '';\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n        successFunction      = data.success || successFunction;\n\n        if (data.type == 'GET' && data.data) {\n\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\n        }\n\n        if (data.withCredentials) {\n\n            XMLHTTP.withCredentials = true;\n\n        }\n\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\n\n            data.beforeSend.call();\n\n        }\n\n        XMLHTTP.open(data.type, data.url, data.async);\n\n        /**\n        * If we send FormData, we need no content-type header\n        */\n        if (!isFormData(data.data)) {\n\n            XMLHTTP.setRequestHeader('Content-type', data['content-type']);\n\n        }\n\n        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        XMLHTTP.onreadystatechange = function () {\n\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n\n                successFunction(XMLHTTP.responseText);\n\n            }\n\n        };\n\n        XMLHTTP.send(data.data);\n\n    };\n\n    /**\n     * Function for checking is it FormData object to send.\n     * @param {Object} object to check\n     * @return boolean\n     */\n    function isFormData(object) {\n\n        return typeof object.append === 'function';\n\n    };\n\n    return {\n\n        call : call\n\n    };\n\n}());\n\nmodule.exports = ajax;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/ajax.js\n// module id = 4\n// module chunks = 0","/**\n * File transport module\n *\n * @module Transport module. Uploads file and returns some response from server\n * @copyright Codex-Team 2017\n *\n * @example\n *\n * Basic usage :\n *  codex.transport.init( {\n *      url : fetchURL,\n *      multiple : bool,\n *      accept : string  // http://htmlbook.ru/html/input/accept\n *      beforeSend : Function,\n *      success : Function,\n *      error : Function\n * });\n *\n * You can handle all of this event like:\n *  - what should happen before data sending with XMLHTTP\n *  - what should after success request\n *  - error handler\n */\n\nmodule.exports = ( function (transport) {\n\n    /** Empty configuration */\n    var config_ = null;\n\n    /** File holder */\n    transport.input = null;\n\n    /** initialize module */\n    transport.init = function (configuration) {\n\n        if (!configuration.url) {\n\n            codex.core.log('can\\'t send request because `url` is missed', 'Transport module', 'error');\n            return;\n\n        }\n\n        config_ = configuration;\n\n        var inputElement = document.createElement('INPUT');\n\n        inputElement.type = 'file';\n\n        if (config_ && config_.multiple) {\n\n            inputElement.setAttribute('multiple', 'multiple');\n\n        }\n\n        if (config_ && config_.accept) {\n\n            inputElement.setAttribute('accept', config_.accept);\n\n        }\n\n        inputElement.addEventListener('change', send_, false);\n\n        /** Save input */\n        transport.input = inputElement;\n\n        /** click input to show upload window */\n        clickInput_();\n\n    };\n\n    var clickInput_ = function () {\n\n        transport.input.click();\n\n    };\n\n    var send_ = function () {\n\n        var url        = config_.url,\n            beforeSend = config_.beforeSend,\n            success    = config_.success,\n            error      = config_.error,\n            formData   = new FormData(),\n            files      = transport.input.files;\n\n        for (var i = 0; i < files.length; i++) {\n\n            formData.append('files[]', files[i], files[i].name);\n\n        }\n\n        codex.ajax.call({\n            type : 'POST',\n            data : formData,\n            url : url,\n            beforeSend : beforeSend,\n            success : success,\n            error : error\n        });\n\n    };\n\n    return transport;\n\n})({});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/transport.js\n// module id = 5\n// module chunks = 0","/**\n* Operations with pages\n*/\nmodule.exports = (function () {\n\n    /**\n    * Toggles mobile menu\n    * Handles clicks on the hamburger icon in header\n    */\n    var toggleMobileMenu = function ( event ) {\n\n        var menu = document.getElementById('js-mobile-menu-holder'),\n            openedClass = 'mobile-menu-holder--opened';\n\n        menu.classList.toggle(openedClass);\n\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        event.preventDefault();\n\n    };\n\n    /**\n    * Module uses for toggle custom checkboxes\n    * that has 'js-custom-checkbox' class and input[type=\"checkbox\"] included\n    * Example:\n    * <span class=\"js-custom-checkbox\">\n    *    <input type=\"checkbox\" name=\"\" value=\"1\"/>\n    * </span>\n    */\n    var customCheckboxes = {\n\n        /**\n        * This class specifies checked custom-checkbox\n        * You may set it on serverisde\n        */\n        CHECKED_CLASS : 'checked',\n\n        init : function () {\n\n            var checkboxes = document.getElementsByClassName('js-custom-checkbox');\n\n            if (checkboxes.length) for (var i = checkboxes.length - 1; i >= 0; i--) {\n\n                checkboxes[i].addEventListener('click', codex.content.customCheckboxes.clicked, false);\n\n            }\n\n        },\n\n        clicked : function () {\n\n            var checkbox  = this,\n                input     = this.querySelector('input'),\n                isChecked = this.classList.contains(codex.content.customCheckboxes.CHECKED_CLASS);\n\n            checkbox.classList.toggle(codex.content.customCheckboxes.CHECKED_CLASS);\n\n            if (isChecked) {\n\n                input.removeAttribute('checked');\n\n            } else {\n\n                input.setAttribute('checked', 'checked');\n\n            }\n\n        }\n    };\n\n    var approvalButtons = {\n\n        CLICKED_CLASS : 'click-again-to-approve',\n\n        init : function () {\n\n            var buttons = document.getElementsByClassName('js-approval-button');\n\n            if (buttons.length) for (var i = buttons.length - 1; i >= 0; i--) {\n\n                buttons[i].addEventListener('click', codex.content.approvalButtons.clicked, false);\n\n            }\n\n        },\n\n        clicked : function (event) {\n\n            var button    = this,\n                isClicked = this.classList.contains(codex.content.approvalButtons.CLICKED_CLASS);\n\n            if (!isClicked) {\n\n                /* временное решение, пока нет всплывающего окна подверждения важных действий */\n                button.classList.add(codex.content.approvalButtons.CLICKED_CLASS);\n\n                event.preventDefault();\n\n            }\n\n        }\n    };\n\n    return {\n\n        toggleMobileMenu : toggleMobileMenu,\n        customCheckboxes : customCheckboxes,\n        approvalButtons : approvalButtons\n\n    };\n\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/content.js\n// module id = 6\n// module chunks = 0","/**\n * Appender is being used for ajax-loading next pages of lists\n *\n *    codex.appender.init({\n *        buttonId      : 'buttonLoadNews',       // button for listening\n *        currentPage   : '<?= $page_number ?>',    // currentPage number\n *        url           : '/',                      // url for ajax-requests\n *        targetBlockId : 'list_of_news',           // target for appending\n *        autoLoading   : true,                     // allow loading when reach bottom while scrolling\n *    });\n */\n\nvar appender = {\n\n    /* Pagination. Here is a number of current page */\n    page : 1,\n\n    settings : null,\n\n    blockForItems : null,\n\n    loadMoreButton : null,\n\n    /**\n     * Button's text for saving it.\n     * On its place dots will be while news are loading\n     */\n    buttonText : null,\n\n    init : function (settings) {\n\n        this.settings = settings;\n\n        /* Checking for existing button and field for loaded info */\n        this.loadMoreButton = document.getElementById(this.settings.buttonId);\n\n        if (!this.loadMoreButton) return false;\n\n        this.blockForItems = document.getElementById(this.settings.targetBlockId);\n\n        if (!this.blockForItems) return false;\n\n        this.page       = settings.currentPage;\n        this.buttonText = this.loadMoreButton.innerHTML;\n\n        if (this.settings.autoLoading) this.autoLoading.isAllowed = true;\n\n        this.loadMoreButton.addEventListener('click', function (event) {\n\n            codex.appender.load();\n\n            event.preventDefault();\n\n            codex.appender.autoLoading.init();\n\n        }, false);\n\n    },\n\n    load : function () {\n\n        var requestUrl = this.settings.url + (parseInt(this.page) + 1);\n            // separator   = '<a href=\"' + requestUrl + '\"><div class=\"article post-list-item w_island separator\">Page ' + (parseInt(this.page) + 1) + '</div></a>';\n\n        codex.ajax.call({\n            type: 'post',\n            url: requestUrl,\n            data: {},\n            beforeSend : function () {\n\n                codex.appender.loadMoreButton.classList.add('loading');\n\n            },\n            success : function (response) {\n\n                response = JSON.parse(response);\n\n                if (response.success) {\n\n                    if (!response.pages) return;\n\n                    /* Append items */\n                    // codex.appender.blockForItems.innerHTML += separator;\n                    codex.appender.blockForItems.innerHTML += response.pages;\n\n                    /* Next page */\n                    codex.appender.page++;\n\n                    if (codex.appender.settings.autoLoading) {\n\n                        /* Removing restriction for auto loading */\n                        codex.appender.autoLoading.canLoad = true;\n\n                    }\n\n                    /* Checking for next page's existing. If no — hide the button for loading news and remove listener */\n                    if (!response.next_page) codex.appender.disable();\n\n                } else {\n\n                    codex.core.showException('Не удалось подгрузить новости');\n\n                }\n\n                codex.appender.loadMoreButton.classList.remove('loading');\n\n            }\n\n        });\n\n    },\n\n    disable : function () {\n\n        codex.appender.loadMoreButton.style.display = 'none';\n\n        if (codex.appender.autoLoading.isLaunched) {\n\n            codex.appender.autoLoading.disable();\n\n        }\n\n    },\n\n    autoLoading : {\n\n        isAllowed : false,\n\n        isLaunched : false,\n\n        /**\n         * Possibility to load news by scrolling.\n         * Restriction for reduction requests which could be while scrolling\n         */\n        canLoad : true,\n\n        init : function () {\n\n            if (!this.isAllowed) return;\n\n            window.addEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\n            codex.appender.autoLoading.isLaunched = true;\n\n        },\n\n        disable : function () {\n\n            window.removeEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\n            codex.appender.autoLoading.isLaunched = false;\n\n        },\n\n        scrollEvent : function () {\n\n            var scrollReachedEnd = window.pageYOffset + window.innerHeight >= document.body.clientHeight;\n\n            if (scrollReachedEnd && codex.appender.autoLoading.canLoad) {\n\n                codex.appender.autoLoading.canLoad = false;\n\n                codex.appender.load();\n\n            }\n\n        },\n\n    }\n\n};\n\nmodule.exports = appender;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/appender.js\n// module id = 7\n// module chunks = 0","/**\n * Parser module\n * @author Taly Guryn\n */\nvar parser = {\n\n    input : null,\n\n    init : function () {\n\n        // this.input = document.getElementById(settings.input_id);\n\n        var _this = this;\n\n        this.input.addEventListener('paste', function () {\n\n            _this.inputPasteCallback();\n\n        }, false);\n\n    },\n\n    inputPasteCallback : function () {\n\n        var e = this.input;\n\n        var _this = this;\n\n        window.setTimeout(function () {\n\n            _this.sendRequest(e.value);\n\n        }, 100);\n\n    },\n\n\n    sendRequest : function (url) {\n\n        codex.core.ajax({\n            type: 'get',\n            url: '/ajax/get_page',\n            data: { 'url' : url },\n            success: function (response) {\n\n                var title, content, sourceLink;\n\n                if ( response.success == 1) {\n\n                    title = document.getElementById('page_form_title');\n                    content = document.getElementById('page_form_content');\n                    sourceLink = document.getElementById('source_link');\n\n                    title.value = response.title;\n                    content.value = response.article;\n                    sourceLink.value = url;\n\n                    // while we have no own editor, we should use this getting element\n                    // cause I can't edit code for external editor\n                    document.getElementsByClassName('redactor_redactor')[0].innerHTML = response.article;\n\n                } else {\n\n                    codex.core.showException('Не удалось импортировать страницу');\n\n                }\n\n            }\n\n        });\n\n    }\n};\n\nmodule.exports = parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/parser.js\n// module id = 8\n// module chunks = 0","/**\n * Comments module\n * @author  @guryn @neSpecc\n * @copyright CodeX Team https://github.com/codex-team\n * @version 1.1.0\n */\nmodule.exports = (function () {\n\n    var commentsList = null,\n        anchor       = document.location.hash;\n\n    var CSS_ = {\n        replyForm :         'comments-form',\n        replyTextarea :     'comment-form__text',\n        replyOpened :       'comment-form__placeholder--opened',\n        replySubmitButton : 'comment-form__button',\n        highlighted :       'comment--highligthed'\n    };\n\n    /**\n     * Initialize comments\n     * @param {object} data        params\n     * @param {sring} data.listId  comments list wrapper id\n     */\n    function init(data) {\n\n        commentsList = document.getElementById(data.listId);\n\n        if (anchor) {\n\n            highligthAnchor();\n\n        }\n\n    }\n\n    /**\n     * Remove holder and append form for comment\n     * @param {Element} placeholder 'Write reply...' button\n     */\n    function reply( replyButton ) {\n\n        /** If reply already opened, do noting */\n        if ( replyButton.classList.contains( CSS_.replyOpened ) ) {\n\n            return;\n\n        }\n\n        /** Get reply params from dataset */\n        var replyParams = {\n            parentId : replyButton.dataset.parentId,\n            rootId   : replyButton.dataset.rootId,\n            action   : replyButton.dataset.action\n        };\n\n        /** Create reply form */\n        var form = createForm( replyParams );\n\n        /** Insert form after reply button */\n        codex.core.insertAfter( replyButton, form );\n\n        replyButton.classList.add( CSS_.replyOpened );\n        getFormTextarea(form).focus();\n\n    }\n\n    /**\n     * Returns reply form\n     *\n     * @param {object} params\n     * @param {Number} params.parentId     parent comment's id\n     * @param {Number} params.rootId       root comment's id\n     * @param {String} params.action       URL for saving\n     *\n     * @return {Element} element that holds textarea and submit-button\n     */\n    function createForm( params ) {\n\n        var textarea     = createTextarea(),\n            button       = createButton(),\n            form         = document.createElement('DIV');\n\n        form.classList.add(CSS_.replyForm);\n\n        /** Store data in Textarea */\n        textarea.dataset.parentId = params.parentId;\n        textarea.dataset.rootId   = params.rootId;\n        textarea.dataset.action   = params.action;\n\n        form.appendChild(textarea);\n        form.appendChild(button);\n\n        return form;\n\n    }\n\n    /** Return textarea for form for comment */\n    function createTextarea() {\n\n        var textarea = document.createElement('TEXTAREA');\n\n        textarea.classList.add(CSS_.replyTextarea);\n        textarea.placeholder = 'Ваш комментарий';\n\n        textarea.addEventListener('keydown', keydownSubmitHandler, false);\n        textarea.addEventListener('blur', blurTextareaHandler, false);\n\n        codex.autoresizeTextarea.addListener(textarea);\n\n        return textarea;\n\n    }\n\n    /** Return submit button for form*/\n    function createButton() {\n\n        var button = document.createElement('DIV');\n\n        button.classList.add( CSS_.replySubmitButton, 'button', 'master');\n        button.textContent = 'Отправить';\n\n        button.addEventListener('click', submitClicked_, false);\n\n        return button;\n\n    }\n\n    /**\n     * Reply submit button click handler\n     */\n    function submitClicked_() {\n\n        var submit = this,\n            form   = submit.parentNode,\n            textarea = getFormTextarea(form);\n\n        send_( textarea );\n\n    }\n\n    /* Return textarea for given form */\n    function getFormTextarea(form) {\n\n        return form.getElementsByTagName('TEXTAREA')[0];\n\n    }\n\n    /**\n     * Remove form on textarea blur\n     * @param {Event} blur Event\n     */\n    function blurTextareaHandler( event ) {\n\n        var textarea  = event.target,\n            form      = textarea.parentNode,\n            commentId = textarea.dataset.parentId;\n\n        if (!textarea.value.trim()) {\n\n            removeForm(form, commentId);\n\n        }\n\n    }\n\n    /**\n     * Removes reply form\n     * @param {Element} form\n     * @param {Number} commentId   reply target comment id\n     */\n    function removeForm( form, commentId ) {\n\n        var replyButton = document.getElementById('reply' + commentId );\n\n        form.remove();\n        replyButton.classList.remove(CSS_.replyOpened);\n\n    }\n\n    /**\n     * Catch Ctrl+Enter or Cmd+Enter for send form\n     * @param {Event} event    Keydown Event\n     */\n    function keydownSubmitHandler(event) {\n\n        var ctrlPressed  = event.ctrlKey || event.metaKey,\n            enterPressed = event.keyCode == 13,\n            textarea = event.target;\n\n        if ( ctrlPressed && enterPressed ) {\n\n            send_( textarea );\n\n            event.preventDefault();\n\n        }\n\n    }\n\n    /**\n     * Ajax function for submit comment\n     * @param {Element} textarea    input with dataset and text\n     */\n    function send_( textarea ) {\n\n        var formData  = new FormData(),\n            form      = textarea.parentNode,\n            submitBtn = form.querySelector('.' + CSS_.replySubmitButton),\n            rootId    = textarea.dataset.rootId,\n            parentId  = textarea.dataset.parentId,\n            actionURL = textarea.dataset.action;\n\n        formData.append('root_id', rootId);\n        formData.append('parent_id', parentId);\n        formData.append('comment_text', textarea.value);\n        formData.append('csrf', window.csrf);\n\n        codex.ajax.call({\n            type: 'POST',\n            url: actionURL,\n            data: formData,\n            beforeSend : function () {\n\n                submitBtn.classList.add('loading');\n\n            },\n            success : function (response) {\n\n                var comment,\n                    emptyCommentsBlock;\n\n                submitBtn.classList.remove('loading');\n\n                response = JSON.parse(response);\n\n                if (response.success) {\n\n                    /** Remove form and return placeholder */\n                    removeForm(form, parentId);\n\n                    emptyCommentsBlock = document.querySelector('.js-empty-comments');\n\n                    if (emptyCommentsBlock) {\n\n                        emptyCommentsBlock.remove();\n\n                    }\n\n                    comment = codex.core.parseHTML(response.comment)[0];\n                    commentsList.appendChild(comment);\n\n                    // Scroll down to new comment\n                    window.scrollTo(0, document.body.scrollHeight);\n\n                    // Highligth new comment\n                    highligthComment(response.commentId);\n\n\n                } else {\n\n                    codex.alerts.show(response.error);\n\n                }\n\n            }\n\n        });\n\n    }\n\n    /**\n     * Highligth comment by id for a time\n     * @param {Number} commentId   id comment to highlight\n     */\n    function highligthComment(commentId) {\n\n        var comment = document.getElementById('comment' + commentId);\n\n        comment.classList.add(CSS_.highlighted);\n\n        window.setTimeout(function () {\n\n            comment.classList.remove(CSS_.highlighted);\n\n        }, 500);\n\n    }\n\n    /** Highligth comment if anchor is in url */\n    function highligthAnchor() {\n\n        var numbers = anchor.match(/\\d+/),\n            commentId;\n\n        if (!numbers) return;\n\n        commentId = numbers[0];\n\n        highligthComment(commentId);\n\n    }\n\n    return {\n        init : init,\n        reply : reply\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/comments.js\n// module id = 9\n// module chunks = 0","/**\n* Notifications tips module\n*/\nmodule.exports = (function () {\n\n    require('../../css/modules/alerts.css');\n\n    var CSS_ = {\n        wrapper : 'exceptionWrapper',\n        exception : 'clientException'\n    };\n\n    var wrapper_ = null;\n\n    function prepare_() {\n\n        if ( wrapper_ ) {\n\n            return true;\n\n        }\n\n        wrapper_ = document.createElement('DIV');\n        wrapper_.classList.add(CSS_.wrapper);\n\n        document.body.appendChild(wrapper_);\n\n    }\n\n    /**\n    * @param {String} message - may content HTML\n    */\n    function show(message) {\n\n        prepare_();\n\n        var notify = document.createElement('DIV');\n\n        notify.classList.add(CSS_.exception);\n        notify.innerHTML = message;\n\n        wrapper_.appendChild(notify);\n\n        notify.classList.add('bounceIn');\n\n        window.setTimeout(function () {\n\n            notify.remove();\n\n        }, 8000);\n\n    }\n\n    return {\n        show : show\n    };\n\n})({});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/alerts.js\n// module id = 10\n// module chunks = 0","/**\n* Module for comments textarea autoresize\n*/\nmodule.exports = (function () {\n\n    /**\n    * Textareas initialization\n    */\n    var init = function () {\n\n        var textareas = document.getElementsByClassName('js-autoresizable');\n\n        if (textareas.length) {\n\n            for (var i = 0; i < textareas.length; i++) {\n\n                addListener(textareas[i]);\n\n            }\n\n        }\n\n    };\n\n    /**\n    * Add input event listener to textarea\n    *\n    * @param {Element} textarea — node which need to be able to autoresize\n    */\n    var addListener = function (textarea) {\n\n        textarea.addEventListener('input', textareaChanged, false);\n\n    };\n\n    /**\n    * Hanging events on textareas\n    */\n    var textareaChanged = function (event) {\n\n        var textarea = event.target;\n\n        checkScrollHeight(textarea);\n\n    };\n\n    /**\n    * Increasing textarea height\n    */\n    var checkScrollHeight = function (textarea) {\n\n        if (textarea.scrollHeight > textarea.clientHeight) {\n\n            textarea.style.height = textarea.scrollHeight + 'px';\n\n        }\n\n    };\n\n    return {\n        init: init,\n        addListener : addListener\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/autoresizeTextarea.js\n// module id = 12\n// module chunks = 0","module.exports = function () {\n\n    var init = function () {\n\n        bindEvents();\n\n    };\n\n    var bindEvents = function () {\n\n        var repeatConfirmEmailBtn = document.getElementById('repeat-email-confirmation');\n\n        repeatConfirmEmailBtn.addEventListener('click', sendEmeailConfirmation);\n\n    };\n\n    var sendEmeailConfirmation = function (e) {\n\n        var success = function (response) {\n\n            response = JSON.parse(response);\n\n            codex.alerts.show(response.message);\n            e.target.classList.remove('loading');\n\n        };\n\n        e.target.classList.add('loading');\n\n        codex.ajax.call({\n            url: '/ajax/confirmation-email',\n            success: success\n        });\n\n    };\n\n    return {\n        init: init\n    };\n\n}();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/profileSettings.js\n// module id = 13\n// module chunks = 0","var sharer = {\n\n    init : function () {\n\n        var shareButtons = document.querySelectorAll('.js-share');\n\n        for (var i = shareButtons.length - 1; i >= 0; i--) {\n\n            shareButtons[i].addEventListener('click', sharer.click, true);\n\n        }\n\n    },\n\n    shareVk : function (data) {\n\n        var link  = 'https://vk.com/share.php?';\n\n        link += 'url='          + data.url;\n        link += '&title='       + data.title;\n        link += '&description=' + data.desc;\n        link += '&image='       + data.img;\n        link += '&noparse=true';\n\n        this.popup( link, 'vkontakte'  );\n\n    },\n\n    shareFacebook : function (data) {\n\n        var FB_APP_ID = 1740455756240878,\n            link      = 'https://www.facebook.com/dialog/share?display=popup';\n\n        link += '&app_id='       + FB_APP_ID;\n        link += '&href='         + data.url;\n        link += '&redirect_uri=' + document.location.href;\n\n        this.popup( link, 'facebook' );\n\n    },\n\n    shareTwitter : function (data) {\n\n        var link = 'https://twitter.com/share?';\n\n        link += 'text='      + data.title;\n        link += '&url='      + data.url;\n        link += '&counturl=' + data.url;\n\n        this.popup( link, 'twitter' );\n\n    },\n\n    shareTelegram : function (data) {\n\n        var link  = 'https://telegram.me/share/url';\n\n        link += '?text=' + data.title;\n        link += '&url='  + data.url;\n\n        this.popup( link, 'telegram' );\n\n    },\n\n    popup : function ( url, socialType ) {\n\n        window.open( url, '', 'toolbar=0,status=0,width=626,height=436' );\n\n        /**\n         * Write analytics goal\n         */\n        if ( window.yaCounter32652805 ) {\n\n            window.yaCounter32652805.reachGoal('article-share', function () {}, this, {type: socialType, url: url});\n\n        }\n\n    },\n\n    click : function (event) {\n\n        var target = event.target;\n\n        /**\n         * Social provider stores in data 'shareType' attribute on share-button\n         * But click may be fired on child-element in button, so we need to handle it.\n         */\n        var type = target.dataset.shareType || target.parentNode.dataset.shareType;\n\n        if (!sharer[type]) return;\n\n        /**\n         * Sanitize share params\n         * @todo test for taint strings\n         */\n            // for (key in window.shareData){\n            //      window.shareData[key] = encodeURIComponent(window.shareData[key]);\n            // }\n\n        var shareData = {\n\n            url:    target.dataset.url || target.parentNode.dataset.url,\n            title:  target.dataset.title || target.parentNode.dataset.title,\n            desc:   target.dataset.desc || target.parentNode.dataset.desc,\n            img:    target.dataset.img || target.parentNode.dataset.title\n\n        };\n\n        /**\n         * Fire click handler\n         */\n\n        sharer[type](shareData);\n\n    }\n\n};\n\nmodule.exports = sharer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/sharer.js\n// module id = 14\n// module chunks = 0","module.exports = (function () {\n\n    var writing = {\n\n        _editorIsReady : false,\n\n        _settings : {\n            hideEditorToolbar  : false,\n            textareaId         : 'codexEditor_time' + Date.now(),\n            titleId            : 'editorWritingTitle',\n            initialBlockPlugin : 'paragraph',\n            items              : [],\n            plugins : [\n                'paragraph',\n                'header',\n            ],\n\n            targetId : null,\n            pageId   : null,\n            parentId : null,\n        },\n\n        prepare : function (settings) {\n\n            writing._mergeSettings(settings);\n\n            return loadEditorResources(writing._settings.plugins)\n                .then(function () {\n\n                    writing._editorIsReady = true;\n                    return Promise.resolve();\n\n                });\n\n        },\n\n        /**\n         * Fill module's settings by settings from params\n         *\n         * @param  {Object} settings  list of params from init\n         */\n        _mergeSettings : function (settings) {\n\n            for (var key in settings) {\n\n                writing._settings[key] = settings[key];\n\n            }\n\n        },\n\n        // /**\n        //  * Function for create form or editor's target and load editor's sources\n        //  */\n        // init : function (targetClicked, formId, hidePlaceholderClass) {\n        //\n        //     /** 1. Create form or textarea for editor */\n        //     var target = document.getElementById(writing._settings.targetId);\n        //\n        //     writing._appendTextareasToTarget(target);\n        //\n        //     writing._startEditor();\n        //\n        // },\n\n        /**\n         * Append textareas for codex.editor\n         *\n         * @param  {Element} target\n         */\n        _appendTextareasToTarget : function (target) {\n\n            var textareaHtml, textareaContent;\n\n            textareaHtml = writing._createElem('TEXTAREA', {\n                name   : 'html',\n                id     : writing._settings.textareaId,\n                hidden : true,\n            }, []);\n\n            textareaContent = writing._createElem('TEXTAREA', {\n                name   : 'content',\n                id     : 'json_result',\n                hidden : true,\n            }, []);\n\n            target.appendChild(textareaHtml);\n            target.appendChild(textareaContent);\n\n        },\n\n        /**\n         * Create element and return it\n         *\n         * @param  {String} tag\n         * @param  {Object} params  pairs { key: value, ... }\n         * @param  {Array} classes  list of classes for new element\n         * @return {Element}\n         */\n        _createElem : function (tag, params, classes) {\n\n            var elem = document.createElement(tag);\n\n            for (var param in params) {\n\n                elem[param] = params[param];\n\n            }\n\n            for (var i in classes) {\n\n                elem.classList.add(classes[i]);\n\n            }\n\n            return elem;\n\n        },\n\n        /**\n         * Run editor\n         */\n        _startEditor : function () {\n\n            codex.editor.start({\n\n                textareaId:  writing._settings.textareaId,\n\n                initialBlockPlugin : writing._settings.initialBlockPlugin,\n\n                hideToolbar: writing._settings.hideEditorToolbar,\n\n                tools : {\n                    paragraph: {\n                        type: 'paragraph',\n                        iconClassname: 'ce-icon-paragraph',\n                        render: paragraph.render,\n                        validate: paragraph.validate,\n                        save: paragraph.save,\n                        allowedToPaste: true,\n                        showInlineToolbar: true,\n                        destroy: paragraph.destroy,\n                        allowRenderOnPaste: true\n                    },\n                    header: {\n                        type: 'header',\n                        iconClassname: 'ce-icon-header',\n                        appendCallback: header.appendCallback,\n                        makeSettings: header.makeSettings,\n                        render: header.render,\n                        validate: header.validate,\n                        save: header.save,\n                        destroy: header.destroy,\n                        displayInToolbox: true\n                    },\n                },\n\n                data : {\n                    items : writing._settings.items,\n                }\n            });\n\n            document.getElementById(writing._settings.titleId).focus();\n\n        },\n\n        init : function () {\n\n            if (!writing._editorIsReady) return;\n\n            /** 1. Create form or textarea for editor */\n            var target = document.getElementById(writing._settings.targetId);\n\n            writing._appendTextareasToTarget(target);\n            writing._startEditor();\n\n        },\n\n        /**\n         * Show form and hide placeholder\n         *\n         * @param  {Element} targetClicked       placeholder with wrapper\n         * @param  {String} formId               remove 'hide' from this form by id\n         * @param  {String} hidePlaceholderClass add this class to placeholder\n         */\n        open : function (targetClicked, formId, hidePlaceholderClass) {\n\n            if (!writing._editorIsReady) return;\n\n            var holder = targetClicked;\n\n            document.getElementById(formId).classList.remove('hide');\n            holder.classList.add(hidePlaceholderClass);\n            holder.onclick = null;\n\n            writing.init();\n\n        },\n\n    };\n\n    /**\n     * Load editor resources and append block with them to body\n     *\n     * @param  {Array}    plugins list of plugins to load\n     */\n    var loadEditorResources = (function () {\n\n        var editorResources = {\n\n            /**\n             * Editor's version\n             */\n            _version : '1.5',\n\n            /**\n             * Init function for load editor's resources\n             *\n             * @param  {Array} plugins list of plugins which should be loaded\n             */\n            load : function (plugins) {\n\n                var loadListPromises = plugins.map(editorResources._loadPlugin);\n\n                loadListPromises.push(editorResources._loadCore());\n\n                return Promise.all(loadListPromises);\n\n            },\n\n            _loadCore : function () {\n\n                var url = 'https://cdn.ifmo.su/editor/v' + editorResources._version + '/codex-editor',\n                    scriptUrl = url + '.js',\n                    styleUrl  = url + '.css';\n\n                return Promise.all([\n                    codex.loader.importScript(scriptUrl, 'editor-core'),\n                    codex.loader.importStyle(styleUrl, 'editor-core'),\n                ]);\n\n            },\n\n            _loadPlugin : function (plugin) {\n\n                var url = 'https://cdn.ifmo.su/editor/v' + editorResources._version + '/plugins/' + plugin + '/' + plugin,\n                    scriptUrl = url + '.js',\n                    styleUrl  = url + '.css';\n\n                return Promise.all([\n                    codex.loader.importScript(scriptUrl, plugin),\n                    codex.loader.importStyle(styleUrl, plugin)\n                ]);\n\n            },\n\n        };\n\n        return editorResources.load;\n\n    })();\n\n    var submitForm = (function () {\n\n        return {\n\n            /**\n            * Prepares and submit form\n            * Send attaches by json-encoded stirng with hidden input\n            */\n            submitAtlasForm : function () {\n\n                var atlasForm = document.forms.atlas;\n\n                if (!atlasForm) return;\n\n                /** CodeX.Editor */\n                var JSONinput = document.getElementById('json_result');\n\n                /**\n                 * Save blocks\n                 */\n                codex.editor.saver.saveBlocks();\n\n                window.setTimeout(function () {\n\n                    var blocksCount = codex.editor.state.jsonOutput.length;\n\n                    if (!blocksCount) {\n\n                        JSONinput.innerHTML = '';\n\n                    } else {\n\n                        JSONinput.innerHTML = JSON.stringify({ data: codex.editor.state.jsonOutput });\n\n                    }\n\n                    /**\n                     * Send form\n                     */\n                    atlasForm.submit();\n\n                }, 100);\n\n            },\n\n            /**\n            * Submits editor form for opening in full-screan page without saving\n            */\n            openEditorFullscreen : function () {\n\n                var atlasForm = document.forms.atlas,\n                    openEditorFlagInput = document.createElement('input');\n\n                openEditorFlagInput.type = 'hidden';\n                openEditorFlagInput.name = 'openFullScreen';\n                openEditorFlagInput.value = 1;\n\n                atlasForm.append(openEditorFlagInput);\n\n                this.submitAtlasForm();\n\n            },\n\n        };\n\n    })();\n\n    return {\n        init    : writing.init,\n        prepare : writing.prepare,\n        open    : writing.open,\n        openEditorFullscreen : submitForm.openEditorFullscreen,\n        submitAtlasForm      : submitForm.submitAtlasForm,\n    };\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/writing.js\n// module id = 15\n// module chunks = 0","module.exports = {\n\n    prefixJS : 'cdx-loader-js-',\n\n    prefixCSS : 'cdx-loader-css-',\n\n    importScript : function (scriptPath, instanceName) {\n\n        return new Promise(function (resolve, reject) {\n\n            var script;\n\n            /** Script is already loaded */\n            if ( !instanceName ) {\n\n                reject('Instance name is missed');\n\n            } else if ( document.getElementById(this.prefixJS + instanceName) ) {\n\n                resolve(scriptPath);\n\n            }\n\n            script = document.createElement('SCRIPT');\n            script.async = true;\n            script.defer = true;\n            script.id    = codex.loader.prefixJS + instanceName;\n\n            script.onload = function () {\n\n                resolve(scriptPath);\n\n            };\n\n            script.onerror = function () {\n\n                reject(scriptPath);\n\n            };\n\n            script.src = scriptPath;\n            document.head.appendChild(script);\n\n        });\n\n    },\n\n    importStyle : function (stylePath, instanceName) {\n\n        return new Promise(function (resolve, reject) {\n\n            var style;\n\n            /** Style is already loaded */\n            if ( !instanceName ) {\n\n                reject('Instance name is missed');\n\n            } else if ( document.getElementById(this.prefixCSS + instanceName) ) {\n\n                resolve(stylePath);\n\n            }\n\n            style = document.createElement('LINK');\n            style.type = 'text/css';\n            style.href = stylePath;\n            style.rel  = 'stylesheet';\n            style.id   = codex.loader.prefixCSS + instanceName;\n\n            style.onload = function () {\n\n                resolve(stylePath);\n\n            };\n\n            style.onerror = function () {\n\n                reject(stylePath);\n\n            };\n\n            style.src = stylePath;\n            document.head.appendChild(style);\n\n        });\n\n    },\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/loader.js\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}